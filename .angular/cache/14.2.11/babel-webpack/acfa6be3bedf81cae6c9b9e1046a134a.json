{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Inject, computed, isDevMode, inject, makeEnvironmentProviders, ENVIRONMENT_INITIALIZER, NgModule, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, queueScheduler } from 'rxjs';\nimport { observeOn, withLatestFrom, scan, pluck, map, distinctUntilChanged } from 'rxjs/operators';\nimport { toSignal } from '@angular/core/rxjs-interop';\nconst REGISTERED_ACTION_TYPES = {};\n\nfunction resetRegisteredActionTypes() {\n  for (const key of Object.keys(REGISTERED_ACTION_TYPES)) {\n    delete REGISTERED_ACTION_TYPES[key];\n  }\n}\n/**\n * @description\n * Creates a configured `Creator` function that, when called, returns an object in the shape of the `Action` interface.\n *\n * Action creators reduce the explicitness of class-based action creators.\n *\n * @param type Describes the action that will be dispatched\n * @param config Additional metadata needed for the handling of the action.  See {@link createAction#usage-notes Usage Notes}.\n *\n * @usageNotes\n *\n * **Declaring an action creator**\n *\n * Without additional metadata:\n * ```ts\n * export const increment = createAction('[Counter] Increment');\n * ```\n * With additional metadata:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   props<{ user: User }>()\n * );\n * ```\n * With a function:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   (response: Response) => response.user\n * );\n * ```\n *\n * **Dispatching an action**\n *\n * Without additional metadata:\n * ```ts\n * store.dispatch(increment());\n * ```\n * With additional metadata:\n * ```ts\n * store.dispatch(loginSuccess({ user: newUser }));\n * ```\n *\n * **Referencing an action in a reducer**\n *\n * Using a switch statement:\n * ```ts\n * switch (action.type) {\n *   // ...\n *   case AuthApiActions.loginSuccess.type: {\n *     return {\n *       ...state,\n *       user: action.user\n *     };\n *   }\n * }\n * ```\n * Using a reducer creator:\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n *\n *  **Referencing an action in an effect**\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(AuthApiActions.loginSuccess),\n *     // ...\n *   )\n * );\n * ```\n */\n\n\nfunction createAction(type, config) {\n  REGISTERED_ACTION_TYPES[type] = (REGISTERED_ACTION_TYPES[type] || 0) + 1;\n\n  if (typeof config === 'function') {\n    return defineType(type, (...args) => ({ ...config(...args),\n      type\n    }));\n  }\n\n  const as = config ? config._as : 'empty';\n\n  switch (as) {\n    case 'empty':\n      return defineType(type, () => ({\n        type\n      }));\n\n    case 'props':\n      return defineType(type, props => ({ ...props,\n        type\n      }));\n\n    default:\n      throw new Error('Unexpected config.');\n  }\n}\n\nfunction props() {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return {\n    _as: 'props',\n    _p: undefined\n  };\n}\n\nfunction union(creators) {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return undefined;\n}\n\nfunction defineType(type, creator) {\n  return Object.defineProperty(creator, 'type', {\n    value: type,\n    writable: false\n  });\n}\n\nfunction capitalize(text) {\n  return text.charAt(0).toUpperCase() + text.substring(1);\n}\n\nfunction uncapitalize(text) {\n  return text.charAt(0).toLowerCase() + text.substring(1);\n}\n/**\n * @description\n * A function that creates a group of action creators with the same source.\n *\n * @param config An object that contains a source and dictionary of events.\n * An event is a key-value pair of an event name and event props.\n * @returns A dictionary of action creators.\n * The name of each action creator is created by camel casing the event name.\n * The type of each action is created using the \"[Source] Event Name\" pattern.\n *\n * @usageNotes\n *\n * ```ts\n * const authApiActions = createActionGroup({\n *   source: 'Auth API',\n *   events: {\n *     // defining events with payload using the `props` function\n *     'Login Success': props<{ userId: number; token: string }>(),\n *     'Login Failure': props<{ error: string }>(),\n *\n *     // defining an event without payload using the `emptyProps` function\n *     'Logout Success': emptyProps(),\n *\n *     // defining an event with payload using the props factory\n *     'Logout Failure': (error: Error) => ({ error }),\n *   },\n * });\n *\n * // action type: \"[Auth API] Login Success\"\n * authApiActions.loginSuccess({ userId: 10, token: 'ngrx' });\n *\n * // action type: \"[Auth API] Login Failure\"\n * authApiActions.loginFailure({ error: 'Login Failure!' });\n *\n * // action type: \"[Auth API] Logout Success\"\n * authApiActions.logoutSuccess();\n *\n * // action type: \"[Auth API] Logout Failure\";\n * authApiActions.logoutFailure(new Error('Logout Failure!'));\n * ```\n */\n\n\nfunction createActionGroup(config) {\n  const {\n    source,\n    events\n  } = config;\n  return Object.keys(events).reduce((actionGroup, eventName) => ({ ...actionGroup,\n    [toActionName(eventName)]: createAction(toActionType(source, eventName), events[eventName])\n  }), {});\n}\n\nfunction emptyProps() {\n  return props();\n}\n\nfunction toActionName(eventName) {\n  return eventName.trim().split(' ').map((word, i) => i === 0 ? uncapitalize(word) : capitalize(word)).join('');\n}\n\nfunction toActionType(source, eventName) {\n  return `[${source}] ${eventName}`;\n}\n\nconst INIT = '@ngrx/store/init';\n\nclass ActionsSubject extends BehaviorSubject {\n  constructor() {\n    super({\n      type: INIT\n    });\n  }\n\n  next(action) {\n    if (typeof action === 'function') {\n      throw new TypeError(`\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().`);\n    } else if (typeof action === 'undefined') {\n      throw new TypeError(`Actions must be objects`);\n    } else if (typeof action.type === 'undefined') {\n      throw new TypeError(`Actions must have a type property`);\n    }\n\n    super.next(action);\n  }\n\n  complete() {\n    /* noop */\n  }\n\n  ngOnDestroy() {\n    super.complete();\n  }\n  /** @nocollapse */\n\n\n  static #_ = this.ɵfac = function ActionsSubject_Factory(t) {\n    return new (t || ActionsSubject)();\n  };\n  /** @nocollapse */\n\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ActionsSubject,\n    factory: ActionsSubject.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsSubject, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nconst ACTIONS_SUBJECT_PROVIDERS = [ActionsSubject];\n\nconst _ROOT_STORE_GUARD = new InjectionToken('@ngrx/store Internal Root Guard');\n\nconst _INITIAL_STATE = new InjectionToken('@ngrx/store Internal Initial State');\n\nconst INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nconst REDUCER_FACTORY = new InjectionToken('@ngrx/store Reducer Factory');\n\nconst _REDUCER_FACTORY = new InjectionToken('@ngrx/store Internal Reducer Factory Provider');\n\nconst INITIAL_REDUCERS = new InjectionToken('@ngrx/store Initial Reducers');\n\nconst _INITIAL_REDUCERS = new InjectionToken('@ngrx/store Internal Initial Reducers');\n\nconst STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\n\nconst _STORE_REDUCERS = new InjectionToken('@ngrx/store Internal Store Reducers');\n\nconst _FEATURE_REDUCERS = new InjectionToken('@ngrx/store Internal Feature Reducers');\n\nconst _FEATURE_CONFIGS = new InjectionToken('@ngrx/store Internal Feature Configs');\n\nconst _STORE_FEATURES = new InjectionToken('@ngrx/store Internal Store Features');\n\nconst _FEATURE_REDUCERS_TOKEN = new InjectionToken('@ngrx/store Internal Feature Reducers Token');\n\nconst FEATURE_REDUCERS = new InjectionToken('@ngrx/store Feature Reducers');\n/**\n * User-defined meta reducers from StoreModule.forRoot()\n */\n\nconst USER_PROVIDED_META_REDUCERS = new InjectionToken('@ngrx/store User Provided Meta Reducers');\n/**\n * Meta reducers defined either internally by @ngrx/store or by library authors\n */\n\nconst META_REDUCERS = new InjectionToken('@ngrx/store Meta Reducers');\n/**\n * Concats the user provided meta reducers and the meta reducers provided on the multi\n * injection token\n */\n\nconst _RESOLVED_META_REDUCERS = new InjectionToken('@ngrx/store Internal Resolved Meta Reducers');\n/**\n * Runtime checks defined by the user via an InjectionToken\n * Defaults to `_USER_RUNTIME_CHECKS`\n */\n\n\nconst USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store User Runtime Checks Config');\n/**\n * Runtime checks defined by the user via forRoot()\n */\n\nconst _USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal User Runtime Checks Config');\n/**\n * Runtime checks currently in use\n */\n\n\nconst ACTIVE_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal Runtime Checks');\n\nconst _ACTION_TYPE_UNIQUENESS_CHECK = new InjectionToken('@ngrx/store Check if Action types are unique');\n/**\n * InjectionToken that registers the global Store.\n * Mainly used to provide a hook that can be injected\n * to ensure the root state is loaded before something\n * that depends on it.\n */\n\n\nconst ROOT_STORE_PROVIDER = new InjectionToken('@ngrx/store Root Store Provider');\n/**\n * InjectionToken that registers feature states.\n * Mainly used to provide a hook that can be injected\n * to ensure feature state is loaded before something\n * that depends on it.\n */\n\nconst FEATURE_STATE_PROVIDER = new InjectionToken('@ngrx/store Feature State Provider');\n/**\n * @description\n * Combines reducers for individual features into a single reducer.\n *\n * You can use this function to delegate handling of state transitions to multiple reducers, each acting on their\n * own sub-state within the root state.\n *\n * @param reducers An object mapping keys of the root state to their corresponding feature reducer.\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * **Example combining two feature reducers into one \"root\" reducer**\n *\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * });\n * ```\n *\n * You can also override the initial states of the sub-features:\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * }, {\n *   featureA: { counterA: 13 },\n *   featureB: { counterB: 37 }\n * });\n * ```\n */\n\nfunction combineReducers(reducers, initialState = {}) {\n  const reducerKeys = Object.keys(reducers);\n  const finalReducers = {};\n\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i];\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  const finalReducerKeys = Object.keys(finalReducers);\n  return function combination(state, action) {\n    state = state === undefined ? initialState : state;\n    let hasChanged = false;\n    const nextState = {};\n\n    for (let i = 0; i < finalReducerKeys.length; i++) {\n      const key = finalReducerKeys[i];\n      const reducer = finalReducers[key];\n      const previousStateForKey = state[key];\n      const nextStateForKey = reducer(previousStateForKey, action);\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction omit(object, keyToRemove) {\n  return Object.keys(object).filter(key => key !== keyToRemove).reduce((result, key) => Object.assign(result, {\n    [key]: object[key]\n  }), {});\n}\n\nfunction compose(...functions) {\n  return function (arg) {\n    if (functions.length === 0) {\n      return arg;\n    }\n\n    const last = functions[functions.length - 1];\n    const rest = functions.slice(0, -1);\n    return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n  };\n}\n\nfunction createReducerFactory(reducerFactory, metaReducers) {\n  if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n    reducerFactory = compose.apply(null, [...metaReducers, reducerFactory]);\n  }\n\n  return (reducers, initialState) => {\n    const reducer = reducerFactory(reducers);\n    return (state, action) => {\n      state = state === undefined ? initialState : state;\n      return reducer(state, action);\n    };\n  };\n}\n\nfunction createFeatureReducerFactory(metaReducers) {\n  const reducerFactory = Array.isArray(metaReducers) && metaReducers.length > 0 ? compose(...metaReducers) : r => r;\n  return (reducer, initialState) => {\n    reducer = reducerFactory(reducer);\n    return (state, action) => {\n      state = state === undefined ? initialState : state;\n      return reducer(state, action);\n    };\n  };\n}\n\nclass ReducerObservable extends Observable {}\n\nclass ReducerManagerDispatcher extends ActionsSubject {}\n\nconst UPDATE = '@ngrx/store/update-reducers';\n\nclass ReducerManager extends BehaviorSubject {\n  get currentReducers() {\n    return this.reducers;\n  }\n\n  constructor(dispatcher, initialState, reducers, reducerFactory) {\n    super(reducerFactory(reducers, initialState));\n    this.dispatcher = dispatcher;\n    this.initialState = initialState;\n    this.reducers = reducers;\n    this.reducerFactory = reducerFactory;\n  }\n\n  addFeature(feature) {\n    this.addFeatures([feature]);\n  }\n\n  addFeatures(features) {\n    const reducers = features.reduce((reducerDict, {\n      reducers,\n      reducerFactory,\n      metaReducers,\n      initialState,\n      key\n    }) => {\n      const reducer = typeof reducers === 'function' ? createFeatureReducerFactory(metaReducers)(reducers, initialState) : createReducerFactory(reducerFactory, metaReducers)(reducers, initialState);\n      reducerDict[key] = reducer;\n      return reducerDict;\n    }, {});\n    this.addReducers(reducers);\n  }\n\n  removeFeature(feature) {\n    this.removeFeatures([feature]);\n  }\n\n  removeFeatures(features) {\n    this.removeReducers(features.map(p => p.key));\n  }\n\n  addReducer(key, reducer) {\n    this.addReducers({\n      [key]: reducer\n    });\n  }\n\n  addReducers(reducers) {\n    this.reducers = { ...this.reducers,\n      ...reducers\n    };\n    this.updateReducers(Object.keys(reducers));\n  }\n\n  removeReducer(featureKey) {\n    this.removeReducers([featureKey]);\n  }\n\n  removeReducers(featureKeys) {\n    featureKeys.forEach(key => {\n      this.reducers = omit(this.reducers, key)\n      /*TODO(#823)*/\n      ;\n    });\n    this.updateReducers(featureKeys);\n  }\n\n  updateReducers(featureKeys) {\n    this.next(this.reducerFactory(this.reducers, this.initialState));\n    this.dispatcher.next({\n      type: UPDATE,\n      features: featureKeys\n    });\n  }\n\n  ngOnDestroy() {\n    this.complete();\n  }\n  /** @nocollapse */\n\n\n  static #_ = this.ɵfac = function ReducerManager_Factory(t) {\n    return new (t || ReducerManager)(i0.ɵɵinject(ReducerManagerDispatcher), i0.ɵɵinject(INITIAL_STATE), i0.ɵɵinject(INITIAL_REDUCERS), i0.ɵɵinject(REDUCER_FACTORY));\n  };\n  /** @nocollapse */\n\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ReducerManager,\n    factory: ReducerManager.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReducerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ReducerManagerDispatcher\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [INITIAL_STATE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [INITIAL_REDUCERS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [REDUCER_FACTORY]\n      }]\n    }];\n  }, null);\n})();\n\nconst REDUCER_MANAGER_PROVIDERS = [ReducerManager, {\n  provide: ReducerObservable,\n  useExisting: ReducerManager\n}, {\n  provide: ReducerManagerDispatcher,\n  useExisting: ActionsSubject\n}];\n\nclass ScannedActionsSubject extends Subject {\n  ngOnDestroy() {\n    this.complete();\n  }\n  /** @nocollapse */\n\n\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵScannedActionsSubject_BaseFactory;\n    return function ScannedActionsSubject_Factory(t) {\n      return (ɵScannedActionsSubject_BaseFactory || (ɵScannedActionsSubject_BaseFactory = i0.ɵɵgetInheritedFactory(ScannedActionsSubject)))(t || ScannedActionsSubject);\n    };\n  }();\n  /** @nocollapse */\n\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ScannedActionsSubject,\n    factory: ScannedActionsSubject.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScannedActionsSubject, [{\n    type: Injectable\n  }], null, null);\n})();\n\nconst SCANNED_ACTIONS_SUBJECT_PROVIDERS = [ScannedActionsSubject];\n\nclass StateObservable extends Observable {}\n\nclass State extends BehaviorSubject {\n  static #_ = this.INIT = INIT;\n\n  constructor(actions$, reducer$, scannedActions, initialState) {\n    super(initialState);\n    const actionsOnQueue$ = actions$.pipe(observeOn(queueScheduler));\n    const withLatestReducer$ = actionsOnQueue$.pipe(withLatestFrom(reducer$));\n    const seed = {\n      state: initialState\n    };\n    const stateAndAction$ = withLatestReducer$.pipe(scan(reduceState, seed));\n    this.stateSubscription = stateAndAction$.subscribe(({\n      state,\n      action\n    }) => {\n      this.next(state);\n      scannedActions.next(action);\n    });\n    this.state = toSignal(this, {\n      manualCleanup: true,\n      requireSync: true\n    });\n  }\n\n  ngOnDestroy() {\n    this.stateSubscription.unsubscribe();\n    this.complete();\n  }\n  /** @nocollapse */\n\n\n  static #_2 = this.ɵfac = function State_Factory(t) {\n    return new (t || State)(i0.ɵɵinject(ActionsSubject), i0.ɵɵinject(ReducerObservable), i0.ɵɵinject(ScannedActionsSubject), i0.ɵɵinject(INITIAL_STATE));\n  };\n  /** @nocollapse */\n\n  static #_3 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: State,\n    factory: State.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(State, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ActionsSubject\n    }, {\n      type: ReducerObservable\n    }, {\n      type: ScannedActionsSubject\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [INITIAL_STATE]\n      }]\n    }];\n  }, null);\n})();\n\nfunction reduceState(stateActionPair = {\n  state: undefined\n}, [action, reducer]) {\n  const {\n    state\n  } = stateActionPair;\n  return {\n    state: reducer(state, action),\n    action\n  };\n}\n\nconst STATE_PROVIDERS = [State, {\n  provide: StateObservable,\n  useExisting: State\n}]; // disabled because we have lowercase generics for `select`\n\nclass Store extends Observable {\n  constructor(state$, actionsObserver, reducerManager) {\n    super();\n    this.actionsObserver = actionsObserver;\n    this.reducerManager = reducerManager;\n    this.source = state$;\n    this.state = state$.state;\n  }\n\n  select(pathOrMapFn, ...paths) {\n    return select.call(null, pathOrMapFn, ...paths)(this);\n  }\n  /**\n   * Returns a signal of the provided selector.\n   *\n   * @param selector selector function\n   * @param options select signal options\n   */\n\n\n  selectSignal(selector, options) {\n    return computed(() => selector(this.state()), {\n      equal: options?.equal || ((previous, current) => previous === current)\n    });\n  }\n\n  lift(operator) {\n    const store = new Store(this, this.actionsObserver, this.reducerManager);\n    store.operator = operator;\n    return store;\n  }\n\n  dispatch(action) {\n    this.actionsObserver.next(action);\n  }\n\n  next(action) {\n    this.actionsObserver.next(action);\n  }\n\n  error(err) {\n    this.actionsObserver.error(err);\n  }\n\n  complete() {\n    this.actionsObserver.complete();\n  }\n\n  addReducer(key, reducer) {\n    this.reducerManager.addReducer(key, reducer);\n  }\n\n  removeReducer(key) {\n    this.reducerManager.removeReducer(key);\n  }\n  /** @nocollapse */\n\n\n  static #_ = this.ɵfac = function Store_Factory(t) {\n    return new (t || Store)(i0.ɵɵinject(StateObservable), i0.ɵɵinject(ActionsSubject), i0.ɵɵinject(ReducerManager));\n  };\n  /** @nocollapse */\n\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Store,\n    factory: Store.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Store, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: StateObservable\n    }, {\n      type: ActionsSubject\n    }, {\n      type: ReducerManager\n    }];\n  }, null);\n})();\n\nconst STORE_PROVIDERS = [Store];\n\nfunction select(pathOrMapFn, propsOrPath, ...paths) {\n  return function selectOperator(source$) {\n    let mapped$;\n\n    if (typeof pathOrMapFn === 'string') {\n      const pathSlices = [propsOrPath, ...paths].filter(Boolean);\n      mapped$ = source$.pipe(pluck(pathOrMapFn, ...pathSlices));\n    } else if (typeof pathOrMapFn === 'function') {\n      mapped$ = source$.pipe(map(source => pathOrMapFn(source, propsOrPath)));\n    } else {\n      throw new TypeError(`Unexpected type '${typeof pathOrMapFn}' in select operator,` + ` expected 'string' or 'function'`);\n    }\n\n    return mapped$.pipe(distinctUntilChanged());\n  };\n}\n\nconst RUNTIME_CHECK_URL = 'https://ngrx.io/guide/store/configuration/runtime-checks';\n\nfunction isUndefined(target) {\n  return target === undefined;\n}\n\nfunction isNull(target) {\n  return target === null;\n}\n\nfunction isArray(target) {\n  return Array.isArray(target);\n}\n\nfunction isString(target) {\n  return typeof target === 'string';\n}\n\nfunction isBoolean(target) {\n  return typeof target === 'boolean';\n}\n\nfunction isNumber(target) {\n  return typeof target === 'number';\n}\n\nfunction isObjectLike(target) {\n  return typeof target === 'object' && target !== null;\n}\n\nfunction isObject(target) {\n  return isObjectLike(target) && !isArray(target);\n}\n\nfunction isPlainObject(target) {\n  if (!isObject(target)) {\n    return false;\n  }\n\n  const targetPrototype = Object.getPrototypeOf(target);\n  return targetPrototype === Object.prototype || targetPrototype === null;\n}\n\nfunction isFunction(target) {\n  return typeof target === 'function';\n}\n\nfunction isComponent(target) {\n  return isFunction(target) && target.hasOwnProperty('ɵcmp');\n}\n\nfunction hasOwnProperty(target, propertyName) {\n  return Object.prototype.hasOwnProperty.call(target, propertyName);\n}\n\nlet _ngrxMockEnvironment = false;\n\nfunction setNgrxMockEnvironment(value) {\n  _ngrxMockEnvironment = value;\n}\n\nfunction isNgrxMockEnvironment() {\n  return _ngrxMockEnvironment;\n}\n\nfunction isEqualCheck(a, b) {\n  return a === b;\n}\n\nfunction isArgumentsChanged(args, lastArguments, comparator) {\n  for (let i = 0; i < args.length; i++) {\n    if (!comparator(args[i], lastArguments[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction resultMemoize(projectionFn, isResultEqual) {\n  return defaultMemoize(projectionFn, isEqualCheck, isResultEqual);\n}\n\nfunction defaultMemoize(projectionFn, isArgumentsEqual = isEqualCheck, isResultEqual = isEqualCheck) {\n  let lastArguments = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any, , , , ,\n\n  let lastResult = null;\n  let overrideResult;\n\n  function reset() {\n    lastArguments = null;\n    lastResult = null;\n  }\n\n  function setResult(result = undefined) {\n    overrideResult = {\n      result\n    };\n  }\n\n  function clearResult() {\n    overrideResult = undefined;\n  }\n  /* eslint-disable prefer-rest-params, prefer-spread */\n  // disabled because of the use of `arguments`\n\n\n  function memoized() {\n    if (overrideResult !== undefined) {\n      return overrideResult.result;\n    }\n\n    if (!lastArguments) {\n      lastResult = projectionFn.apply(null, arguments);\n      lastArguments = arguments;\n      return lastResult;\n    }\n\n    if (!isArgumentsChanged(arguments, lastArguments, isArgumentsEqual)) {\n      return lastResult;\n    }\n\n    const newResult = projectionFn.apply(null, arguments);\n    lastArguments = arguments;\n\n    if (isResultEqual(lastResult, newResult)) {\n      return lastResult;\n    }\n\n    lastResult = newResult;\n    return newResult;\n  }\n\n  return {\n    memoized,\n    reset,\n    setResult,\n    clearResult\n  };\n}\n\nfunction createSelector(...input) {\n  return createSelectorFactory(defaultMemoize)(...input);\n}\n\nfunction defaultStateFn(state, selectors, props, memoizedProjector) {\n  if (props === undefined) {\n    const args = selectors.map(fn => fn(state));\n    return memoizedProjector.memoized.apply(null, args);\n  }\n\n  const args = selectors.map(fn => fn(state, props));\n  return memoizedProjector.memoized.apply(null, [...args, props]);\n}\n/**\n *\n * @param memoize The function used to memoize selectors\n * @param options Config Object that may include a `stateFn` function defining how to return the selector's value, given the entire `Store`'s state, parent `Selector`s, `Props`, and a `MemoizedProjection`\n *\n * @usageNotes\n *\n * **Creating a Selector Factory Where Array Order Does Not Matter**\n *\n * ```ts\n * function removeMatch(arr: string[], target: string): string[] {\n *   const matchIndex = arr.indexOf(target);\n *   return [...arr.slice(0, matchIndex), ...arr.slice(matchIndex + 1)];\n * }\n *\n * function orderDoesNotMatterComparer(a: any, b: any): boolean {\n *   if (!Array.isArray(a) || !Array.isArray(b)) {\n *     return a === b;\n *   }\n *   if (a.length !== b.length) {\n *     return false;\n *   }\n *   let tempB = [...b];\n *   function reduceToDetermineIfArraysContainSameContents(\n *     previousCallResult: boolean,\n *     arrayMember: any\n *   ): boolean {\n *     if (previousCallResult === false) {\n *       return false;\n *     }\n *     if (tempB.includes(arrayMember)) {\n *       tempB = removeMatch(tempB, arrayMember);\n *       return true;\n *     }\n *     return false;\n *   }\n *   return a.reduce(reduceToDetermineIfArraysContainSameContents, true);\n * }\n *\n * export const createOrderDoesNotMatterSelector = createSelectorFactory(\n *   (projectionFun) => defaultMemoize(\n *     projectionFun,\n *     orderDoesNotMatterComparer,\n *     orderDoesNotMatterComparer\n *   )\n * );\n * ```\n *\n * **Creating an Alternative Memoization Strategy**\n *\n * ```ts\n * function serialize(x: any): string {\n *   return JSON.stringify(x);\n * }\n *\n * export const createFullHistorySelector = createSelectorFactory(\n *  (projectionFunction) => {\n *    const cache = {};\n *\n *    function memoized() {\n *      const serializedArguments = serialize(...arguments);\n *       if (cache[serializedArguments] != null) {\n *         cache[serializedArguments] = projectionFunction.apply(null, arguments);\n *       }\n *       return cache[serializedArguments];\n *     }\n *     return {\n *       memoized,\n *       reset: () => {},\n *       setResult: () => {},\n *       clearResult: () => {},\n *     };\n *   }\n * );\n * ```\n */\n\n\nfunction createSelectorFactory(memoize, options = {\n  stateFn: defaultStateFn\n}) {\n  return function (...input) {\n    let args = input;\n\n    if (Array.isArray(args[0])) {\n      const [head, ...tail] = args;\n      args = [...head, ...tail];\n    } else if (args.length === 1 && isSelectorsDictionary(args[0])) {\n      args = extractArgsFromSelectorsDictionary(args[0]);\n    }\n\n    const selectors = args.slice(0, args.length - 1);\n    const projector = args[args.length - 1];\n    const memoizedSelectors = selectors.filter(selector => selector.release && typeof selector.release === 'function');\n    const memoizedProjector = memoize(function (...selectors) {\n      return projector.apply(null, selectors);\n    });\n    const memoizedState = defaultMemoize(function (state, props) {\n      return options.stateFn.apply(null, [state, selectors, props, memoizedProjector]);\n    });\n\n    function release() {\n      memoizedState.reset();\n      memoizedProjector.reset();\n      memoizedSelectors.forEach(selector => selector.release());\n    }\n\n    return Object.assign(memoizedState.memoized, {\n      release,\n      projector: memoizedProjector.memoized,\n      setResult: memoizedState.setResult,\n      clearResult: memoizedState.clearResult\n    });\n  };\n}\n\nfunction createFeatureSelector(featureName) {\n  return createSelector(state => {\n    const featureState = state[featureName];\n\n    if (!isNgrxMockEnvironment() && isDevMode() && !(featureName in state)) {\n      console.warn(`@ngrx/store: The feature name \"${featureName}\" does ` + 'not exist in the state, therefore createFeatureSelector ' + 'cannot access it.  Be sure it is imported in a loaded module ' + `using StoreModule.forRoot('${featureName}', ...) or ` + `StoreModule.forFeature('${featureName}', ...).  If the default ` + 'state is intended to be undefined, as is the case with router ' + 'state, this development-only warning message can be ignored.');\n    }\n\n    return featureState;\n  }, featureState => featureState);\n}\n\nfunction isSelectorsDictionary(selectors) {\n  return !!selectors && typeof selectors === 'object' && Object.values(selectors).every(selector => typeof selector === 'function');\n}\n\nfunction extractArgsFromSelectorsDictionary(selectorsDictionary) {\n  const selectors = Object.values(selectorsDictionary);\n  const resultKeys = Object.keys(selectorsDictionary);\n\n  const projector = (...selectorResults) => resultKeys.reduce((result, key, index) => ({ ...result,\n    [key]: selectorResults[index]\n  }), {});\n\n  return [...selectors, projector];\n}\n/**\n * @description\n * A function that accepts a feature name and a feature reducer, and creates\n * a feature selector and a selector for each feature state property.\n * This function also provides the ability to add extra selectors to\n * the feature object.\n *\n * @param featureConfig An object that contains a feature name and a feature\n * reducer as required, and extra selectors factory as an optional argument.\n * @returns An object that contains a feature name, a feature reducer,\n * a feature selector, a selector for each feature state property, and extra\n * selectors.\n *\n * @usageNotes\n *\n * ```ts\n * interface ProductsState {\n *   products: Product[];\n *   selectedId: string | null;\n * }\n *\n * const initialState: ProductsState = {\n *   products: [],\n *   selectedId: null,\n * };\n *\n * const productsFeature = createFeature({\n *   name: 'products',\n *   reducer: createReducer(\n *     initialState,\n *     on(ProductsApiActions.loadSuccess(state, { products }) => ({\n *       ...state,\n *       products,\n *     }),\n *   ),\n * });\n *\n * const {\n *   name,\n *   reducer,\n *   // feature selector\n *   selectProductsState, // type: MemoizedSelector<Record<string, any>, ProductsState>\n *   // feature state properties selectors\n *   selectProducts, // type: MemoizedSelector<Record<string, any>, Product[]>\n *   selectSelectedId, // type: MemoizedSelector<Record<string, any>, string | null>\n * } = productsFeature;\n * ```\n *\n * **Creating Feature with Extra Selectors**\n *\n * ```ts\n * type CallState = 'init' | 'loading' | 'loaded' | { error: string };\n *\n * interface State extends EntityState<Product> {\n *   callState: CallState;\n * }\n *\n * const adapter = createEntityAdapter<Product>();\n * const initialState: State = adapter.getInitialState({\n *   callState: 'init',\n * });\n *\n * export const productsFeature = createFeature({\n *   name: 'products',\n *   reducer: createReducer(initialState),\n *   extraSelectors: ({ selectProductsState, selectCallState }) => ({\n *     ...adapter.getSelectors(selectProductsState),\n *     ...getCallStateSelectors(selectCallState)\n *   }),\n * });\n *\n * const {\n *   name,\n *   reducer,\n *   // feature selector\n *   selectProductsState,\n *   // feature state properties selectors\n *   selectIds,\n *   selectEntities,\n *   selectCallState,\n *   // selectors returned by `adapter.getSelectors`\n *   selectAll,\n *   selectTotal,\n *   // selectors returned by `getCallStateSelectors`\n *   selectIsLoading,\n *   selectIsLoaded,\n *   selectError,\n * } = productsFeature;\n * ```\n */\n\n\nfunction createFeature(featureConfig) {\n  const {\n    name,\n    reducer,\n    extraSelectors: extraSelectorsFactory\n  } = featureConfig;\n  const featureSelector = createFeatureSelector(name);\n  const nestedSelectors = createNestedSelectors(featureSelector, reducer);\n  const baseSelectors = {\n    [`select${capitalize(name)}State`]: featureSelector,\n    ...nestedSelectors\n  };\n  const extraSelectors = extraSelectorsFactory ? extraSelectorsFactory(baseSelectors) : {};\n  return {\n    name,\n    reducer,\n    ...baseSelectors,\n    ...extraSelectors\n  };\n}\n\nfunction createNestedSelectors(featureSelector, reducer) {\n  const initialState = getInitialState(reducer);\n  const nestedKeys = isPlainObject(initialState) ? Object.keys(initialState) : [];\n  return nestedKeys.reduce((nestedSelectors, nestedKey) => ({ ...nestedSelectors,\n    [`select${capitalize(nestedKey)}`]: createSelector(featureSelector, parentState => parentState?.[nestedKey])\n  }), {});\n}\n\nfunction getInitialState(reducer) {\n  return reducer(undefined, {\n    type: '@ngrx/feature/init'\n  });\n}\n\nfunction _createStoreReducers(reducers) {\n  return reducers instanceof InjectionToken ? inject(reducers) : reducers;\n}\n\nfunction _createFeatureStore(configs, featureStores) {\n  return featureStores.map((feat, index) => {\n    if (configs[index] instanceof InjectionToken) {\n      const conf = inject(configs[index]);\n      return {\n        key: feat.key,\n        reducerFactory: conf.reducerFactory ? conf.reducerFactory : combineReducers,\n        metaReducers: conf.metaReducers ? conf.metaReducers : [],\n        initialState: conf.initialState\n      };\n    }\n\n    return feat;\n  });\n}\n\nfunction _createFeatureReducers(reducerCollection) {\n  return reducerCollection.map(reducer => {\n    return reducer instanceof InjectionToken ? inject(reducer) : reducer;\n  });\n}\n\nfunction _initialStateFactory(initialState) {\n  if (typeof initialState === 'function') {\n    return initialState();\n  }\n\n  return initialState;\n}\n\nfunction _concatMetaReducers(metaReducers, userProvidedMetaReducers) {\n  return metaReducers.concat(userProvidedMetaReducers);\n}\n\nfunction _provideForRootGuard() {\n  const store = inject(Store, {\n    optional: true,\n    skipSelf: true\n  });\n\n  if (store) {\n    throw new TypeError(`The root Store has been provided more than once. Feature modules should provide feature states instead.`);\n  }\n\n  return 'guarded';\n}\n\nfunction immutabilityCheckMetaReducer(reducer, checks) {\n  return function (state, action) {\n    const act = checks.action(action) ? freeze(action) : action;\n    const nextState = reducer(state, act);\n    return checks.state() ? freeze(nextState) : nextState;\n  };\n}\n\nfunction freeze(target) {\n  Object.freeze(target);\n  const targetIsFunction = isFunction(target);\n  Object.getOwnPropertyNames(target).forEach(prop => {\n    // Ignore Ivy properties, ref: https://github.com/ngrx/platform/issues/2109#issuecomment-582689060\n    if (prop.startsWith('ɵ')) {\n      return;\n    }\n\n    if (hasOwnProperty(target, prop) && (targetIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true)) {\n      const propValue = target[prop];\n\n      if ((isObjectLike(propValue) || isFunction(propValue)) && !Object.isFrozen(propValue)) {\n        freeze(propValue);\n      }\n    }\n  });\n  return target;\n}\n\nfunction serializationCheckMetaReducer(reducer, checks) {\n  return function (state, action) {\n    if (checks.action(action)) {\n      const unserializableAction = getUnserializable(action);\n      throwIfUnserializable(unserializableAction, 'action');\n    }\n\n    const nextState = reducer(state, action);\n\n    if (checks.state()) {\n      const unserializableState = getUnserializable(nextState);\n      throwIfUnserializable(unserializableState, 'state');\n    }\n\n    return nextState;\n  };\n}\n\nfunction getUnserializable(target, path = []) {\n  // Guard against undefined and null, e.g. a reducer that returns undefined\n  if ((isUndefined(target) || isNull(target)) && path.length === 0) {\n    return {\n      path: ['root'],\n      value: target\n    };\n  }\n\n  const keys = Object.keys(target);\n  return keys.reduce((result, key) => {\n    if (result) {\n      return result;\n    }\n\n    const value = target[key]; // Ignore Ivy components\n\n    if (isComponent(value)) {\n      return result;\n    }\n\n    if (isUndefined(value) || isNull(value) || isNumber(value) || isBoolean(value) || isString(value) || isArray(value)) {\n      return false;\n    }\n\n    if (isPlainObject(value)) {\n      return getUnserializable(value, [...path, key]);\n    }\n\n    return {\n      path: [...path, key],\n      value\n    };\n  }, false);\n}\n\nfunction throwIfUnserializable(unserializable, context) {\n  if (unserializable === false) {\n    return;\n  }\n\n  const unserializablePath = unserializable.path.join('.');\n  const error = new Error(`Detected unserializable ${context} at \"${unserializablePath}\". ${RUNTIME_CHECK_URL}#strict${context}serializability`);\n  error.value = unserializable.value;\n  error.unserializablePath = unserializablePath;\n  throw error;\n}\n\nfunction inNgZoneAssertMetaReducer(reducer, checks) {\n  return function (state, action) {\n    if (checks.action(action) && !i0.NgZone.isInAngularZone()) {\n      throw new Error(`Action '${action.type}' running outside NgZone. ${RUNTIME_CHECK_URL}#strictactionwithinngzone`);\n    }\n\n    return reducer(state, action);\n  };\n}\n\nfunction createActiveRuntimeChecks(runtimeChecks) {\n  if (isDevMode()) {\n    return {\n      strictStateSerializability: false,\n      strictActionSerializability: false,\n      strictStateImmutability: true,\n      strictActionImmutability: true,\n      strictActionWithinNgZone: false,\n      strictActionTypeUniqueness: false,\n      ...runtimeChecks\n    };\n  }\n\n  return {\n    strictStateSerializability: false,\n    strictActionSerializability: false,\n    strictStateImmutability: false,\n    strictActionImmutability: false,\n    strictActionWithinNgZone: false,\n    strictActionTypeUniqueness: false\n  };\n}\n\nfunction createSerializationCheckMetaReducer({\n  strictActionSerializability,\n  strictStateSerializability\n}) {\n  return reducer => strictActionSerializability || strictStateSerializability ? serializationCheckMetaReducer(reducer, {\n    action: action => strictActionSerializability && !ignoreNgrxAction(action),\n    state: () => strictStateSerializability\n  }) : reducer;\n}\n\nfunction createImmutabilityCheckMetaReducer({\n  strictActionImmutability,\n  strictStateImmutability\n}) {\n  return reducer => strictActionImmutability || strictStateImmutability ? immutabilityCheckMetaReducer(reducer, {\n    action: action => strictActionImmutability && !ignoreNgrxAction(action),\n    state: () => strictStateImmutability\n  }) : reducer;\n}\n\nfunction ignoreNgrxAction(action) {\n  return action.type.startsWith('@ngrx');\n}\n\nfunction createInNgZoneCheckMetaReducer({\n  strictActionWithinNgZone\n}) {\n  return reducer => strictActionWithinNgZone ? inNgZoneAssertMetaReducer(reducer, {\n    action: action => strictActionWithinNgZone && !ignoreNgrxAction(action)\n  }) : reducer;\n}\n\nfunction provideRuntimeChecks(runtimeChecks) {\n  return [{\n    provide: _USER_RUNTIME_CHECKS,\n    useValue: runtimeChecks\n  }, {\n    provide: USER_RUNTIME_CHECKS,\n    useFactory: _runtimeChecksFactory,\n    deps: [_USER_RUNTIME_CHECKS]\n  }, {\n    provide: ACTIVE_RUNTIME_CHECKS,\n    deps: [USER_RUNTIME_CHECKS],\n    useFactory: createActiveRuntimeChecks\n  }, {\n    provide: META_REDUCERS,\n    multi: true,\n    deps: [ACTIVE_RUNTIME_CHECKS],\n    useFactory: createImmutabilityCheckMetaReducer\n  }, {\n    provide: META_REDUCERS,\n    multi: true,\n    deps: [ACTIVE_RUNTIME_CHECKS],\n    useFactory: createSerializationCheckMetaReducer\n  }, {\n    provide: META_REDUCERS,\n    multi: true,\n    deps: [ACTIVE_RUNTIME_CHECKS],\n    useFactory: createInNgZoneCheckMetaReducer\n  }];\n}\n\nfunction checkForActionTypeUniqueness() {\n  return [{\n    provide: _ACTION_TYPE_UNIQUENESS_CHECK,\n    multi: true,\n    deps: [ACTIVE_RUNTIME_CHECKS],\n    useFactory: _actionTypeUniquenessCheck\n  }];\n}\n\nfunction _runtimeChecksFactory(runtimeChecks) {\n  return runtimeChecks;\n}\n\nfunction _actionTypeUniquenessCheck(config) {\n  if (!config.strictActionTypeUniqueness) {\n    return;\n  }\n\n  const duplicates = Object.entries(REGISTERED_ACTION_TYPES).filter(([, registrations]) => registrations > 1).map(([type]) => type);\n\n  if (duplicates.length) {\n    throw new Error(`Action types are registered more than once, ${duplicates.map(type => `\"${type}\"`).join(', ')}. ${RUNTIME_CHECK_URL}#strictactiontypeuniqueness`);\n  }\n}\n/**\n * Provides additional slices of state in the Store.\n * These providers cannot be used at the component level.\n *\n * @usageNotes\n *\n * ### Providing Store Features\n *\n * ```ts\n * const booksRoutes: Route[] = [\n *   {\n *     path: '',\n *     providers: [provideState('books', booksReducer)],\n *     children: [\n *       { path: '', component: BookListComponent },\n *       { path: ':id', component: BookDetailsComponent },\n *     ],\n *   },\n * ];\n * ```\n */\n\n\nfunction provideState(featureNameOrSlice, reducers, config = {}) {\n  return makeEnvironmentProviders([..._provideState(featureNameOrSlice, reducers, config), ENVIRONMENT_STATE_PROVIDER]);\n}\n\nfunction _provideStore(reducers = {}, config = {}) {\n  return [{\n    provide: _ROOT_STORE_GUARD,\n    useFactory: _provideForRootGuard\n  }, {\n    provide: _INITIAL_STATE,\n    useValue: config.initialState\n  }, {\n    provide: INITIAL_STATE,\n    useFactory: _initialStateFactory,\n    deps: [_INITIAL_STATE]\n  }, {\n    provide: _INITIAL_REDUCERS,\n    useValue: reducers\n  }, {\n    provide: _STORE_REDUCERS,\n    useExisting: reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS\n  }, {\n    provide: INITIAL_REDUCERS,\n    deps: [_INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n    useFactory: _createStoreReducers\n  }, {\n    provide: USER_PROVIDED_META_REDUCERS,\n    useValue: config.metaReducers ? config.metaReducers : []\n  }, {\n    provide: _RESOLVED_META_REDUCERS,\n    deps: [META_REDUCERS, USER_PROVIDED_META_REDUCERS],\n    useFactory: _concatMetaReducers\n  }, {\n    provide: _REDUCER_FACTORY,\n    useValue: config.reducerFactory ? config.reducerFactory : combineReducers\n  }, {\n    provide: REDUCER_FACTORY,\n    deps: [_REDUCER_FACTORY, _RESOLVED_META_REDUCERS],\n    useFactory: createReducerFactory\n  }, ACTIONS_SUBJECT_PROVIDERS, REDUCER_MANAGER_PROVIDERS, SCANNED_ACTIONS_SUBJECT_PROVIDERS, STATE_PROVIDERS, STORE_PROVIDERS, provideRuntimeChecks(config.runtimeChecks), checkForActionTypeUniqueness()];\n}\n\nfunction rootStoreProviderFactory() {\n  inject(ActionsSubject);\n  inject(ReducerObservable);\n  inject(ScannedActionsSubject);\n  inject(Store);\n  inject(_ROOT_STORE_GUARD, {\n    optional: true\n  });\n  inject(_ACTION_TYPE_UNIQUENESS_CHECK, {\n    optional: true\n  });\n}\n/**\n * Environment Initializer used in the root\n * providers to initialize the Store\n */\n\n\nconst ENVIRONMENT_STORE_PROVIDER = [{\n  provide: ROOT_STORE_PROVIDER,\n  useFactory: rootStoreProviderFactory\n}, {\n  provide: ENVIRONMENT_INITIALIZER,\n  multi: true,\n\n  useFactory() {\n    return () => inject(ROOT_STORE_PROVIDER);\n  }\n\n}];\n/**\n * Provides the global Store providers and initializes\n * the Store.\n * These providers cannot be used at the component level.\n *\n * @usageNotes\n *\n * ### Providing the Global Store\n *\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideStore()],\n * });\n * ```\n */\n\nfunction provideStore(reducers, config) {\n  return makeEnvironmentProviders([..._provideStore(reducers, config), ENVIRONMENT_STORE_PROVIDER]);\n}\n\nfunction featureStateProviderFactory() {\n  inject(ROOT_STORE_PROVIDER);\n  const features = inject(_STORE_FEATURES);\n  const featureReducers = inject(FEATURE_REDUCERS);\n  const reducerManager = inject(ReducerManager);\n  inject(_ACTION_TYPE_UNIQUENESS_CHECK, {\n    optional: true\n  });\n  const feats = features.map((feature, index) => {\n    const featureReducerCollection = featureReducers.shift(); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    const reducers = featureReducerCollection\n    /*TODO(#823)*/\n    [index];\n    return { ...feature,\n      reducers,\n      initialState: _initialStateFactory(feature.initialState)\n    };\n  });\n  reducerManager.addFeatures(feats);\n}\n/**\n * Environment Initializer used in the feature\n * providers to register state features\n */\n\n\nconst ENVIRONMENT_STATE_PROVIDER = [{\n  provide: FEATURE_STATE_PROVIDER,\n  useFactory: featureStateProviderFactory\n}, {\n  provide: ENVIRONMENT_INITIALIZER,\n  multi: true,\n\n  useFactory() {\n    return () => inject(FEATURE_STATE_PROVIDER);\n  }\n\n}];\n\nfunction _provideState(featureNameOrSlice, reducers, config = {}) {\n  return [{\n    provide: _FEATURE_CONFIGS,\n    multi: true,\n    useValue: featureNameOrSlice instanceof Object ? {} : config\n  }, {\n    provide: STORE_FEATURES,\n    multi: true,\n    useValue: {\n      key: featureNameOrSlice instanceof Object ? featureNameOrSlice.name : featureNameOrSlice,\n      reducerFactory: !(config instanceof InjectionToken) && config.reducerFactory ? config.reducerFactory : combineReducers,\n      metaReducers: !(config instanceof InjectionToken) && config.metaReducers ? config.metaReducers : [],\n      initialState: !(config instanceof InjectionToken) && config.initialState ? config.initialState : undefined\n    }\n  }, {\n    provide: _STORE_FEATURES,\n    deps: [_FEATURE_CONFIGS, STORE_FEATURES],\n    useFactory: _createFeatureStore\n  }, {\n    provide: _FEATURE_REDUCERS,\n    multi: true,\n    useValue: featureNameOrSlice instanceof Object ? featureNameOrSlice.reducer : reducers\n  }, {\n    provide: _FEATURE_REDUCERS_TOKEN,\n    multi: true,\n    useExisting: reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS\n  }, {\n    provide: FEATURE_REDUCERS,\n    multi: true,\n    deps: [_FEATURE_REDUCERS, [new Inject(_FEATURE_REDUCERS_TOKEN)]],\n    useFactory: _createFeatureReducers\n  }, checkForActionTypeUniqueness()];\n}\n\nclass StoreRootModule {\n  constructor(actions$, reducer$, scannedActions$, store, guard, actionCheck) {}\n  /** @nocollapse */\n\n\n  static #_ = this.ɵfac = function StoreRootModule_Factory(t) {\n    return new (t || StoreRootModule)(i0.ɵɵinject(ActionsSubject), i0.ɵɵinject(ReducerObservable), i0.ɵɵinject(ScannedActionsSubject), i0.ɵɵinject(Store), i0.ɵɵinject(_ROOT_STORE_GUARD, 8), i0.ɵɵinject(_ACTION_TYPE_UNIQUENESS_CHECK, 8));\n  };\n  /** @nocollapse */\n\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: StoreRootModule\n  });\n  /** @nocollapse */\n\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreRootModule, [{\n    type: NgModule,\n    args: [{}]\n  }], function () {\n    return [{\n      type: ActionsSubject\n    }, {\n      type: ReducerObservable\n    }, {\n      type: ScannedActionsSubject\n    }, {\n      type: Store\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ROOT_STORE_GUARD]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n      }]\n    }];\n  }, null);\n})();\n\nclass StoreFeatureModule {\n  constructor(features, featureReducers, reducerManager, root, actionCheck) {\n    this.features = features;\n    this.featureReducers = featureReducers;\n    this.reducerManager = reducerManager;\n    const feats = features.map((feature, index) => {\n      const featureReducerCollection = featureReducers.shift(); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      const reducers = featureReducerCollection\n      /*TODO(#823)*/\n      [index];\n      return { ...feature,\n        reducers,\n        initialState: _initialStateFactory(feature.initialState)\n      };\n    });\n    reducerManager.addFeatures(feats);\n  } // eslint-disable-next-line @angular-eslint/contextual-lifecycle\n\n\n  ngOnDestroy() {\n    this.reducerManager.removeFeatures(this.features);\n  }\n  /** @nocollapse */\n\n\n  static #_ = this.ɵfac = function StoreFeatureModule_Factory(t) {\n    return new (t || StoreFeatureModule)(i0.ɵɵinject(_STORE_FEATURES), i0.ɵɵinject(FEATURE_REDUCERS), i0.ɵɵinject(ReducerManager), i0.ɵɵinject(StoreRootModule), i0.ɵɵinject(_ACTION_TYPE_UNIQUENESS_CHECK, 8));\n  };\n  /** @nocollapse */\n\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: StoreFeatureModule\n  });\n  /** @nocollapse */\n\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreFeatureModule, [{\n    type: NgModule,\n    args: [{}]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [_STORE_FEATURES]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [FEATURE_REDUCERS]\n      }]\n    }, {\n      type: ReducerManager\n    }, {\n      type: StoreRootModule\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n      }]\n    }];\n  }, null);\n})();\n\nclass StoreModule {\n  static forRoot(reducers, config) {\n    return {\n      ngModule: StoreRootModule,\n      providers: [..._provideStore(reducers, config)]\n    };\n  }\n\n  static forFeature(featureNameOrSlice, reducers, config = {}) {\n    return {\n      ngModule: StoreFeatureModule,\n      providers: [..._provideState(featureNameOrSlice, reducers, config)]\n    };\n  }\n  /** @nocollapse */\n\n\n  static #_ = this.ɵfac = function StoreModule_Factory(t) {\n    return new (t || StoreModule)();\n  };\n  /** @nocollapse */\n\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: StoreModule\n  });\n  /** @nocollapse */\n\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n/**\n * @description\n * Associates actions with a given state change function.\n * A state change function must be provided as the last parameter.\n *\n * @param args `ActionCreator`'s followed by a state change function.\n *\n * @returns an association of action types with a state change function.\n *\n * @usageNotes\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n */\n\n\nfunction on(...args) {\n  const reducer = args.pop();\n  const types = args.map(creator => creator.type);\n  return {\n    reducer,\n    types\n  };\n}\n/**\n * @description\n * Creates a reducer function to handle state transitions.\n *\n * Reducer creators reduce the explicitness of reducer functions with switch statements.\n *\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @param ons Associations between actions and state changes.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * - Must be used with `ActionCreator`'s (returned by `createAction`). Cannot be used with class-based action creators.\n * - The returned `ActionReducer` does not require being wrapped with another function.\n *\n * **Declaring a reducer creator**\n *\n * ```ts\n * export const reducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n * ```\n */\n\n\nfunction createReducer(initialState, ...ons) {\n  const map = new Map();\n\n  for (const on of ons) {\n    for (const type of on.types) {\n      const existingReducer = map.get(type);\n\n      if (existingReducer) {\n        const newReducer = (state, action) => on.reducer(existingReducer(state, action), action);\n\n        map.set(type, newReducer);\n      } else {\n        map.set(type, on.reducer);\n      }\n    }\n  }\n\n  return function (state = initialState, action) {\n    const reducer = map.get(action.type);\n    return reducer ? reducer(state, action) : state;\n  };\n}\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ACTIVE_RUNTIME_CHECKS, ActionsSubject, FEATURE_REDUCERS, FEATURE_STATE_PROVIDER, INIT, INITIAL_REDUCERS, INITIAL_STATE, META_REDUCERS, REDUCER_FACTORY, ROOT_STORE_PROVIDER, ReducerManager, ReducerManagerDispatcher, ReducerObservable, STORE_FEATURES, ScannedActionsSubject, State, StateObservable, Store, StoreFeatureModule, StoreModule, StoreRootModule, UPDATE, USER_PROVIDED_META_REDUCERS, USER_RUNTIME_CHECKS, combineReducers, compose, createAction, createActionGroup, createFeature, createFeatureSelector, createReducer, createReducerFactory, createSelector, createSelectorFactory, defaultMemoize, defaultStateFn, emptyProps, isNgrxMockEnvironment, on, props, provideState, provideStore, reduceState, resultMemoize, select, setNgrxMockEnvironment, union };","map":{"version":3,"names":["i0","Injectable","InjectionToken","Inject","computed","isDevMode","inject","makeEnvironmentProviders","ENVIRONMENT_INITIALIZER","NgModule","Optional","BehaviorSubject","Observable","Subject","queueScheduler","observeOn","withLatestFrom","scan","pluck","map","distinctUntilChanged","toSignal","REGISTERED_ACTION_TYPES","resetRegisteredActionTypes","key","Object","keys","createAction","type","config","defineType","args","as","_as","props","Error","_p","undefined","union","creators","creator","defineProperty","value","writable","capitalize","text","charAt","toUpperCase","substring","uncapitalize","toLowerCase","createActionGroup","source","events","reduce","actionGroup","eventName","toActionName","toActionType","emptyProps","trim","split","word","i","join","INIT","ActionsSubject","constructor","next","action","TypeError","complete","ngOnDestroy","ɵfac","ɵprov","ACTIONS_SUBJECT_PROVIDERS","_ROOT_STORE_GUARD","_INITIAL_STATE","INITIAL_STATE","REDUCER_FACTORY","_REDUCER_FACTORY","INITIAL_REDUCERS","_INITIAL_REDUCERS","STORE_FEATURES","_STORE_REDUCERS","_FEATURE_REDUCERS","_FEATURE_CONFIGS","_STORE_FEATURES","_FEATURE_REDUCERS_TOKEN","FEATURE_REDUCERS","USER_PROVIDED_META_REDUCERS","META_REDUCERS","_RESOLVED_META_REDUCERS","USER_RUNTIME_CHECKS","_USER_RUNTIME_CHECKS","ACTIVE_RUNTIME_CHECKS","_ACTION_TYPE_UNIQUENESS_CHECK","ROOT_STORE_PROVIDER","FEATURE_STATE_PROVIDER","combineReducers","reducers","initialState","reducerKeys","finalReducers","length","finalReducerKeys","combination","state","hasChanged","nextState","reducer","previousStateForKey","nextStateForKey","omit","object","keyToRemove","filter","result","assign","compose","functions","arg","last","rest","slice","reduceRight","composed","fn","createReducerFactory","reducerFactory","metaReducers","Array","isArray","apply","createFeatureReducerFactory","r","ReducerObservable","ReducerManagerDispatcher","UPDATE","ReducerManager","currentReducers","dispatcher","addFeature","feature","addFeatures","features","reducerDict","addReducers","removeFeature","removeFeatures","removeReducers","p","addReducer","updateReducers","removeReducer","featureKey","featureKeys","forEach","decorators","REDUCER_MANAGER_PROVIDERS","provide","useExisting","ScannedActionsSubject","SCANNED_ACTIONS_SUBJECT_PROVIDERS","StateObservable","State","actions$","reducer$","scannedActions","actionsOnQueue$","pipe","withLatestReducer$","seed","stateAndAction$","reduceState","stateSubscription","subscribe","manualCleanup","requireSync","unsubscribe","stateActionPair","STATE_PROVIDERS","Store","state$","actionsObserver","reducerManager","select","pathOrMapFn","paths","call","selectSignal","selector","options","equal","previous","current","lift","operator","store","dispatch","error","err","STORE_PROVIDERS","propsOrPath","selectOperator","source$","mapped$","pathSlices","Boolean","RUNTIME_CHECK_URL","isUndefined","target","isNull","isString","isBoolean","isNumber","isObjectLike","isObject","isPlainObject","targetPrototype","getPrototypeOf","prototype","isFunction","isComponent","hasOwnProperty","propertyName","_ngrxMockEnvironment","setNgrxMockEnvironment","isNgrxMockEnvironment","isEqualCheck","a","b","isArgumentsChanged","lastArguments","comparator","resultMemoize","projectionFn","isResultEqual","defaultMemoize","isArgumentsEqual","lastResult","overrideResult","reset","setResult","clearResult","memoized","arguments","newResult","createSelector","input","createSelectorFactory","defaultStateFn","selectors","memoizedProjector","memoize","stateFn","head","tail","isSelectorsDictionary","extractArgsFromSelectorsDictionary","projector","memoizedSelectors","release","memoizedState","createFeatureSelector","featureName","featureState","console","warn","values","every","selectorsDictionary","resultKeys","selectorResults","index","createFeature","featureConfig","name","extraSelectors","extraSelectorsFactory","featureSelector","nestedSelectors","createNestedSelectors","baseSelectors","getInitialState","nestedKeys","nestedKey","parentState","_createStoreReducers","_createFeatureStore","configs","featureStores","feat","conf","_createFeatureReducers","reducerCollection","_initialStateFactory","_concatMetaReducers","userProvidedMetaReducers","concat","_provideForRootGuard","optional","skipSelf","immutabilityCheckMetaReducer","checks","act","freeze","targetIsFunction","getOwnPropertyNames","prop","startsWith","propValue","isFrozen","serializationCheckMetaReducer","unserializableAction","getUnserializable","throwIfUnserializable","unserializableState","path","unserializable","context","unserializablePath","inNgZoneAssertMetaReducer","NgZone","isInAngularZone","createActiveRuntimeChecks","runtimeChecks","strictStateSerializability","strictActionSerializability","strictStateImmutability","strictActionImmutability","strictActionWithinNgZone","strictActionTypeUniqueness","createSerializationCheckMetaReducer","ignoreNgrxAction","createImmutabilityCheckMetaReducer","createInNgZoneCheckMetaReducer","provideRuntimeChecks","useValue","useFactory","_runtimeChecksFactory","deps","multi","checkForActionTypeUniqueness","_actionTypeUniquenessCheck","duplicates","entries","registrations","provideState","featureNameOrSlice","_provideState","ENVIRONMENT_STATE_PROVIDER","_provideStore","rootStoreProviderFactory","ENVIRONMENT_STORE_PROVIDER","provideStore","featureStateProviderFactory","featureReducers","feats","featureReducerCollection","shift","StoreRootModule","scannedActions$","guard","actionCheck","ɵmod","ɵinj","StoreFeatureModule","root","StoreModule","forRoot","ngModule","providers","forFeature","on","pop","types","createReducer","ons","Map","existingReducer","get","newReducer","set"],"sources":["/Users/cristiannoordermeer/Desktop/angular-challenge/draw-sql-2/node_modules/@ngrx/store/fesm2022/ngrx-store.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Inject, computed, isDevMode, inject, makeEnvironmentProviders, ENVIRONMENT_INITIALIZER, NgModule, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, queueScheduler } from 'rxjs';\nimport { observeOn, withLatestFrom, scan, pluck, map, distinctUntilChanged } from 'rxjs/operators';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\nconst REGISTERED_ACTION_TYPES = {};\nfunction resetRegisteredActionTypes() {\n    for (const key of Object.keys(REGISTERED_ACTION_TYPES)) {\n        delete REGISTERED_ACTION_TYPES[key];\n    }\n}\n\n/**\n * @description\n * Creates a configured `Creator` function that, when called, returns an object in the shape of the `Action` interface.\n *\n * Action creators reduce the explicitness of class-based action creators.\n *\n * @param type Describes the action that will be dispatched\n * @param config Additional metadata needed for the handling of the action.  See {@link createAction#usage-notes Usage Notes}.\n *\n * @usageNotes\n *\n * **Declaring an action creator**\n *\n * Without additional metadata:\n * ```ts\n * export const increment = createAction('[Counter] Increment');\n * ```\n * With additional metadata:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   props<{ user: User }>()\n * );\n * ```\n * With a function:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   (response: Response) => response.user\n * );\n * ```\n *\n * **Dispatching an action**\n *\n * Without additional metadata:\n * ```ts\n * store.dispatch(increment());\n * ```\n * With additional metadata:\n * ```ts\n * store.dispatch(loginSuccess({ user: newUser }));\n * ```\n *\n * **Referencing an action in a reducer**\n *\n * Using a switch statement:\n * ```ts\n * switch (action.type) {\n *   // ...\n *   case AuthApiActions.loginSuccess.type: {\n *     return {\n *       ...state,\n *       user: action.user\n *     };\n *   }\n * }\n * ```\n * Using a reducer creator:\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n *\n *  **Referencing an action in an effect**\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(AuthApiActions.loginSuccess),\n *     // ...\n *   )\n * );\n * ```\n */\nfunction createAction(type, config) {\n    REGISTERED_ACTION_TYPES[type] = (REGISTERED_ACTION_TYPES[type] || 0) + 1;\n    if (typeof config === 'function') {\n        return defineType(type, (...args) => ({\n            ...config(...args),\n            type,\n        }));\n    }\n    const as = config ? config._as : 'empty';\n    switch (as) {\n        case 'empty':\n            return defineType(type, () => ({ type }));\n        case 'props':\n            return defineType(type, (props) => ({\n                ...props,\n                type,\n            }));\n        default:\n            throw new Error('Unexpected config.');\n    }\n}\nfunction props() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return { _as: 'props', _p: undefined };\n}\nfunction union(creators) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return undefined;\n}\nfunction defineType(type, creator) {\n    return Object.defineProperty(creator, 'type', {\n        value: type,\n        writable: false,\n    });\n}\n\nfunction capitalize(text) {\n    return (text.charAt(0).toUpperCase() + text.substring(1));\n}\nfunction uncapitalize(text) {\n    return (text.charAt(0).toLowerCase() + text.substring(1));\n}\n\n/**\n * @description\n * A function that creates a group of action creators with the same source.\n *\n * @param config An object that contains a source and dictionary of events.\n * An event is a key-value pair of an event name and event props.\n * @returns A dictionary of action creators.\n * The name of each action creator is created by camel casing the event name.\n * The type of each action is created using the \"[Source] Event Name\" pattern.\n *\n * @usageNotes\n *\n * ```ts\n * const authApiActions = createActionGroup({\n *   source: 'Auth API',\n *   events: {\n *     // defining events with payload using the `props` function\n *     'Login Success': props<{ userId: number; token: string }>(),\n *     'Login Failure': props<{ error: string }>(),\n *\n *     // defining an event without payload using the `emptyProps` function\n *     'Logout Success': emptyProps(),\n *\n *     // defining an event with payload using the props factory\n *     'Logout Failure': (error: Error) => ({ error }),\n *   },\n * });\n *\n * // action type: \"[Auth API] Login Success\"\n * authApiActions.loginSuccess({ userId: 10, token: 'ngrx' });\n *\n * // action type: \"[Auth API] Login Failure\"\n * authApiActions.loginFailure({ error: 'Login Failure!' });\n *\n * // action type: \"[Auth API] Logout Success\"\n * authApiActions.logoutSuccess();\n *\n * // action type: \"[Auth API] Logout Failure\";\n * authApiActions.logoutFailure(new Error('Logout Failure!'));\n * ```\n */\nfunction createActionGroup(config) {\n    const { source, events } = config;\n    return Object.keys(events).reduce((actionGroup, eventName) => ({\n        ...actionGroup,\n        [toActionName(eventName)]: createAction(toActionType(source, eventName), events[eventName]),\n    }), {});\n}\nfunction emptyProps() {\n    return props();\n}\nfunction toActionName(eventName) {\n    return eventName\n        .trim()\n        .split(' ')\n        .map((word, i) => (i === 0 ? uncapitalize(word) : capitalize(word)))\n        .join('');\n}\nfunction toActionType(source, eventName) {\n    return `[${source}] ${eventName}`;\n}\n\nconst INIT = '@ngrx/store/init';\nclass ActionsSubject extends BehaviorSubject {\n    constructor() {\n        super({ type: INIT });\n    }\n    next(action) {\n        if (typeof action === 'function') {\n            throw new TypeError(`\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().`);\n        }\n        else if (typeof action === 'undefined') {\n            throw new TypeError(`Actions must be objects`);\n        }\n        else if (typeof action.type === 'undefined') {\n            throw new TypeError(`Actions must have a type property`);\n        }\n        super.next(action);\n    }\n    complete() {\n        /* noop */\n    }\n    ngOnDestroy() {\n        super.complete();\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ActionsSubject, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ActionsSubject }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ActionsSubject, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\nconst ACTIONS_SUBJECT_PROVIDERS = [ActionsSubject];\n\nconst _ROOT_STORE_GUARD = new InjectionToken('@ngrx/store Internal Root Guard');\nconst _INITIAL_STATE = new InjectionToken('@ngrx/store Internal Initial State');\nconst INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nconst REDUCER_FACTORY = new InjectionToken('@ngrx/store Reducer Factory');\nconst _REDUCER_FACTORY = new InjectionToken('@ngrx/store Internal Reducer Factory Provider');\nconst INITIAL_REDUCERS = new InjectionToken('@ngrx/store Initial Reducers');\nconst _INITIAL_REDUCERS = new InjectionToken('@ngrx/store Internal Initial Reducers');\nconst STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\nconst _STORE_REDUCERS = new InjectionToken('@ngrx/store Internal Store Reducers');\nconst _FEATURE_REDUCERS = new InjectionToken('@ngrx/store Internal Feature Reducers');\nconst _FEATURE_CONFIGS = new InjectionToken('@ngrx/store Internal Feature Configs');\nconst _STORE_FEATURES = new InjectionToken('@ngrx/store Internal Store Features');\nconst _FEATURE_REDUCERS_TOKEN = new InjectionToken('@ngrx/store Internal Feature Reducers Token');\nconst FEATURE_REDUCERS = new InjectionToken('@ngrx/store Feature Reducers');\n/**\n * User-defined meta reducers from StoreModule.forRoot()\n */\nconst USER_PROVIDED_META_REDUCERS = new InjectionToken('@ngrx/store User Provided Meta Reducers');\n/**\n * Meta reducers defined either internally by @ngrx/store or by library authors\n */\nconst META_REDUCERS = new InjectionToken('@ngrx/store Meta Reducers');\n/**\n * Concats the user provided meta reducers and the meta reducers provided on the multi\n * injection token\n */\nconst _RESOLVED_META_REDUCERS = new InjectionToken('@ngrx/store Internal Resolved Meta Reducers');\n/**\n * Runtime checks defined by the user via an InjectionToken\n * Defaults to `_USER_RUNTIME_CHECKS`\n */\nconst USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store User Runtime Checks Config');\n/**\n * Runtime checks defined by the user via forRoot()\n */\nconst _USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal User Runtime Checks Config');\n/**\n * Runtime checks currently in use\n */\nconst ACTIVE_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal Runtime Checks');\nconst _ACTION_TYPE_UNIQUENESS_CHECK = new InjectionToken('@ngrx/store Check if Action types are unique');\n/**\n * InjectionToken that registers the global Store.\n * Mainly used to provide a hook that can be injected\n * to ensure the root state is loaded before something\n * that depends on it.\n */\nconst ROOT_STORE_PROVIDER = new InjectionToken('@ngrx/store Root Store Provider');\n/**\n * InjectionToken that registers feature states.\n * Mainly used to provide a hook that can be injected\n * to ensure feature state is loaded before something\n * that depends on it.\n */\nconst FEATURE_STATE_PROVIDER = new InjectionToken('@ngrx/store Feature State Provider');\n\n/**\n * @description\n * Combines reducers for individual features into a single reducer.\n *\n * You can use this function to delegate handling of state transitions to multiple reducers, each acting on their\n * own sub-state within the root state.\n *\n * @param reducers An object mapping keys of the root state to their corresponding feature reducer.\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * **Example combining two feature reducers into one \"root\" reducer**\n *\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * });\n * ```\n *\n * You can also override the initial states of the sub-features:\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * }, {\n *   featureA: { counterA: 13 },\n *   featureB: { counterB: 37 }\n * });\n * ```\n */\nfunction combineReducers(reducers, initialState = {}) {\n    const reducerKeys = Object.keys(reducers);\n    const finalReducers = {};\n    for (let i = 0; i < reducerKeys.length; i++) {\n        const key = reducerKeys[i];\n        if (typeof reducers[key] === 'function') {\n            finalReducers[key] = reducers[key];\n        }\n    }\n    const finalReducerKeys = Object.keys(finalReducers);\n    return function combination(state, action) {\n        state = state === undefined ? initialState : state;\n        let hasChanged = false;\n        const nextState = {};\n        for (let i = 0; i < finalReducerKeys.length; i++) {\n            const key = finalReducerKeys[i];\n            const reducer = finalReducers[key];\n            const previousStateForKey = state[key];\n            const nextStateForKey = reducer(previousStateForKey, action);\n            nextState[key] = nextStateForKey;\n            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n        }\n        return hasChanged ? nextState : state;\n    };\n}\nfunction omit(object, keyToRemove) {\n    return Object.keys(object)\n        .filter((key) => key !== keyToRemove)\n        .reduce((result, key) => Object.assign(result, { [key]: object[key] }), {});\n}\nfunction compose(...functions) {\n    return function (arg) {\n        if (functions.length === 0) {\n            return arg;\n        }\n        const last = functions[functions.length - 1];\n        const rest = functions.slice(0, -1);\n        return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n    };\n}\nfunction createReducerFactory(reducerFactory, metaReducers) {\n    if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n        reducerFactory = compose.apply(null, [\n            ...metaReducers,\n            reducerFactory,\n        ]);\n    }\n    return (reducers, initialState) => {\n        const reducer = reducerFactory(reducers);\n        return (state, action) => {\n            state = state === undefined ? initialState : state;\n            return reducer(state, action);\n        };\n    };\n}\nfunction createFeatureReducerFactory(metaReducers) {\n    const reducerFactory = Array.isArray(metaReducers) && metaReducers.length > 0\n        ? compose(...metaReducers)\n        : (r) => r;\n    return (reducer, initialState) => {\n        reducer = reducerFactory(reducer);\n        return (state, action) => {\n            state = state === undefined ? initialState : state;\n            return reducer(state, action);\n        };\n    };\n}\n\nclass ReducerObservable extends Observable {\n}\nclass ReducerManagerDispatcher extends ActionsSubject {\n}\nconst UPDATE = '@ngrx/store/update-reducers';\nclass ReducerManager extends BehaviorSubject {\n    get currentReducers() {\n        return this.reducers;\n    }\n    constructor(dispatcher, initialState, reducers, reducerFactory) {\n        super(reducerFactory(reducers, initialState));\n        this.dispatcher = dispatcher;\n        this.initialState = initialState;\n        this.reducers = reducers;\n        this.reducerFactory = reducerFactory;\n    }\n    addFeature(feature) {\n        this.addFeatures([feature]);\n    }\n    addFeatures(features) {\n        const reducers = features.reduce((reducerDict, { reducers, reducerFactory, metaReducers, initialState, key }) => {\n            const reducer = typeof reducers === 'function'\n                ? createFeatureReducerFactory(metaReducers)(reducers, initialState)\n                : createReducerFactory(reducerFactory, metaReducers)(reducers, initialState);\n            reducerDict[key] = reducer;\n            return reducerDict;\n        }, {});\n        this.addReducers(reducers);\n    }\n    removeFeature(feature) {\n        this.removeFeatures([feature]);\n    }\n    removeFeatures(features) {\n        this.removeReducers(features.map((p) => p.key));\n    }\n    addReducer(key, reducer) {\n        this.addReducers({ [key]: reducer });\n    }\n    addReducers(reducers) {\n        this.reducers = { ...this.reducers, ...reducers };\n        this.updateReducers(Object.keys(reducers));\n    }\n    removeReducer(featureKey) {\n        this.removeReducers([featureKey]);\n    }\n    removeReducers(featureKeys) {\n        featureKeys.forEach((key) => {\n            this.reducers = omit(this.reducers, key) /*TODO(#823)*/;\n        });\n        this.updateReducers(featureKeys);\n    }\n    updateReducers(featureKeys) {\n        this.next(this.reducerFactory(this.reducers, this.initialState));\n        this.dispatcher.next({\n            type: UPDATE,\n            features: featureKeys,\n        });\n    }\n    ngOnDestroy() {\n        this.complete();\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ReducerManager, deps: [{ token: ReducerManagerDispatcher }, { token: INITIAL_STATE }, { token: INITIAL_REDUCERS }, { token: REDUCER_FACTORY }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ReducerManager }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ReducerManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: ReducerManagerDispatcher }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [INITIAL_STATE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [INITIAL_REDUCERS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [REDUCER_FACTORY]\n                }] }]; } });\nconst REDUCER_MANAGER_PROVIDERS = [\n    ReducerManager,\n    { provide: ReducerObservable, useExisting: ReducerManager },\n    { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\n];\n\nclass ScannedActionsSubject extends Subject {\n    ngOnDestroy() {\n        this.complete();\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ScannedActionsSubject, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ScannedActionsSubject }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ScannedActionsSubject, decorators: [{\n            type: Injectable\n        }] });\nconst SCANNED_ACTIONS_SUBJECT_PROVIDERS = [\n    ScannedActionsSubject,\n];\n\nclass StateObservable extends Observable {\n}\nclass State extends BehaviorSubject {\n    static { this.INIT = INIT; }\n    constructor(actions$, reducer$, scannedActions, initialState) {\n        super(initialState);\n        const actionsOnQueue$ = actions$.pipe(observeOn(queueScheduler));\n        const withLatestReducer$ = actionsOnQueue$.pipe(withLatestFrom(reducer$));\n        const seed = { state: initialState };\n        const stateAndAction$ = withLatestReducer$.pipe(scan(reduceState, seed));\n        this.stateSubscription = stateAndAction$.subscribe(({ state, action }) => {\n            this.next(state);\n            scannedActions.next(action);\n        });\n        this.state = toSignal(this, { manualCleanup: true, requireSync: true });\n    }\n    ngOnDestroy() {\n        this.stateSubscription.unsubscribe();\n        this.complete();\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: State, deps: [{ token: ActionsSubject }, { token: ReducerObservable }, { token: ScannedActionsSubject }, { token: INITIAL_STATE }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: State }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: State, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: ActionsSubject }, { type: ReducerObservable }, { type: ScannedActionsSubject }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [INITIAL_STATE]\n                }] }]; } });\nfunction reduceState(stateActionPair = { state: undefined }, [action, reducer]) {\n    const { state } = stateActionPair;\n    return { state: reducer(state, action), action };\n}\nconst STATE_PROVIDERS = [\n    State,\n    { provide: StateObservable, useExisting: State },\n];\n\n// disabled because we have lowercase generics for `select`\nclass Store extends Observable {\n    constructor(state$, actionsObserver, reducerManager) {\n        super();\n        this.actionsObserver = actionsObserver;\n        this.reducerManager = reducerManager;\n        this.source = state$;\n        this.state = state$.state;\n    }\n    select(pathOrMapFn, ...paths) {\n        return select.call(null, pathOrMapFn, ...paths)(this);\n    }\n    /**\n     * Returns a signal of the provided selector.\n     *\n     * @param selector selector function\n     * @param options select signal options\n     */\n    selectSignal(selector, options) {\n        return computed(() => selector(this.state()), {\n            equal: options?.equal || ((previous, current) => previous === current),\n        });\n    }\n    lift(operator) {\n        const store = new Store(this, this.actionsObserver, this.reducerManager);\n        store.operator = operator;\n        return store;\n    }\n    dispatch(action) {\n        this.actionsObserver.next(action);\n    }\n    next(action) {\n        this.actionsObserver.next(action);\n    }\n    error(err) {\n        this.actionsObserver.error(err);\n    }\n    complete() {\n        this.actionsObserver.complete();\n    }\n    addReducer(key, reducer) {\n        this.reducerManager.addReducer(key, reducer);\n    }\n    removeReducer(key) {\n        this.reducerManager.removeReducer(key);\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Store, deps: [{ token: StateObservable }, { token: ActionsSubject }, { token: ReducerManager }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Store }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Store, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: StateObservable }, { type: ActionsSubject }, { type: ReducerManager }]; } });\nconst STORE_PROVIDERS = [Store];\nfunction select(pathOrMapFn, propsOrPath, ...paths) {\n    return function selectOperator(source$) {\n        let mapped$;\n        if (typeof pathOrMapFn === 'string') {\n            const pathSlices = [propsOrPath, ...paths].filter(Boolean);\n            mapped$ = source$.pipe(pluck(pathOrMapFn, ...pathSlices));\n        }\n        else if (typeof pathOrMapFn === 'function') {\n            mapped$ = source$.pipe(map((source) => pathOrMapFn(source, propsOrPath)));\n        }\n        else {\n            throw new TypeError(`Unexpected type '${typeof pathOrMapFn}' in select operator,` +\n                ` expected 'string' or 'function'`);\n        }\n        return mapped$.pipe(distinctUntilChanged());\n    };\n}\n\nconst RUNTIME_CHECK_URL = 'https://ngrx.io/guide/store/configuration/runtime-checks';\nfunction isUndefined(target) {\n    return target === undefined;\n}\nfunction isNull(target) {\n    return target === null;\n}\nfunction isArray(target) {\n    return Array.isArray(target);\n}\nfunction isString(target) {\n    return typeof target === 'string';\n}\nfunction isBoolean(target) {\n    return typeof target === 'boolean';\n}\nfunction isNumber(target) {\n    return typeof target === 'number';\n}\nfunction isObjectLike(target) {\n    return typeof target === 'object' && target !== null;\n}\nfunction isObject(target) {\n    return isObjectLike(target) && !isArray(target);\n}\nfunction isPlainObject(target) {\n    if (!isObject(target)) {\n        return false;\n    }\n    const targetPrototype = Object.getPrototypeOf(target);\n    return targetPrototype === Object.prototype || targetPrototype === null;\n}\nfunction isFunction(target) {\n    return typeof target === 'function';\n}\nfunction isComponent(target) {\n    return isFunction(target) && target.hasOwnProperty('ɵcmp');\n}\nfunction hasOwnProperty(target, propertyName) {\n    return Object.prototype.hasOwnProperty.call(target, propertyName);\n}\n\nlet _ngrxMockEnvironment = false;\nfunction setNgrxMockEnvironment(value) {\n    _ngrxMockEnvironment = value;\n}\nfunction isNgrxMockEnvironment() {\n    return _ngrxMockEnvironment;\n}\n\nfunction isEqualCheck(a, b) {\n    return a === b;\n}\nfunction isArgumentsChanged(args, lastArguments, comparator) {\n    for (let i = 0; i < args.length; i++) {\n        if (!comparator(args[i], lastArguments[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction resultMemoize(projectionFn, isResultEqual) {\n    return defaultMemoize(projectionFn, isEqualCheck, isResultEqual);\n}\nfunction defaultMemoize(projectionFn, isArgumentsEqual = isEqualCheck, isResultEqual = isEqualCheck) {\n    let lastArguments = null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, , , , ,\n    let lastResult = null;\n    let overrideResult;\n    function reset() {\n        lastArguments = null;\n        lastResult = null;\n    }\n    function setResult(result = undefined) {\n        overrideResult = { result };\n    }\n    function clearResult() {\n        overrideResult = undefined;\n    }\n    /* eslint-disable prefer-rest-params, prefer-spread */\n    // disabled because of the use of `arguments`\n    function memoized() {\n        if (overrideResult !== undefined) {\n            return overrideResult.result;\n        }\n        if (!lastArguments) {\n            lastResult = projectionFn.apply(null, arguments);\n            lastArguments = arguments;\n            return lastResult;\n        }\n        if (!isArgumentsChanged(arguments, lastArguments, isArgumentsEqual)) {\n            return lastResult;\n        }\n        const newResult = projectionFn.apply(null, arguments);\n        lastArguments = arguments;\n        if (isResultEqual(lastResult, newResult)) {\n            return lastResult;\n        }\n        lastResult = newResult;\n        return newResult;\n    }\n    return { memoized, reset, setResult, clearResult };\n}\nfunction createSelector(...input) {\n    return createSelectorFactory(defaultMemoize)(...input);\n}\nfunction defaultStateFn(state, selectors, props, memoizedProjector) {\n    if (props === undefined) {\n        const args = selectors.map((fn) => fn(state));\n        return memoizedProjector.memoized.apply(null, args);\n    }\n    const args = selectors.map((fn) => fn(state, props));\n    return memoizedProjector.memoized.apply(null, [...args, props]);\n}\n/**\n *\n * @param memoize The function used to memoize selectors\n * @param options Config Object that may include a `stateFn` function defining how to return the selector's value, given the entire `Store`'s state, parent `Selector`s, `Props`, and a `MemoizedProjection`\n *\n * @usageNotes\n *\n * **Creating a Selector Factory Where Array Order Does Not Matter**\n *\n * ```ts\n * function removeMatch(arr: string[], target: string): string[] {\n *   const matchIndex = arr.indexOf(target);\n *   return [...arr.slice(0, matchIndex), ...arr.slice(matchIndex + 1)];\n * }\n *\n * function orderDoesNotMatterComparer(a: any, b: any): boolean {\n *   if (!Array.isArray(a) || !Array.isArray(b)) {\n *     return a === b;\n *   }\n *   if (a.length !== b.length) {\n *     return false;\n *   }\n *   let tempB = [...b];\n *   function reduceToDetermineIfArraysContainSameContents(\n *     previousCallResult: boolean,\n *     arrayMember: any\n *   ): boolean {\n *     if (previousCallResult === false) {\n *       return false;\n *     }\n *     if (tempB.includes(arrayMember)) {\n *       tempB = removeMatch(tempB, arrayMember);\n *       return true;\n *     }\n *     return false;\n *   }\n *   return a.reduce(reduceToDetermineIfArraysContainSameContents, true);\n * }\n *\n * export const createOrderDoesNotMatterSelector = createSelectorFactory(\n *   (projectionFun) => defaultMemoize(\n *     projectionFun,\n *     orderDoesNotMatterComparer,\n *     orderDoesNotMatterComparer\n *   )\n * );\n * ```\n *\n * **Creating an Alternative Memoization Strategy**\n *\n * ```ts\n * function serialize(x: any): string {\n *   return JSON.stringify(x);\n * }\n *\n * export const createFullHistorySelector = createSelectorFactory(\n *  (projectionFunction) => {\n *    const cache = {};\n *\n *    function memoized() {\n *      const serializedArguments = serialize(...arguments);\n *       if (cache[serializedArguments] != null) {\n *         cache[serializedArguments] = projectionFunction.apply(null, arguments);\n *       }\n *       return cache[serializedArguments];\n *     }\n *     return {\n *       memoized,\n *       reset: () => {},\n *       setResult: () => {},\n *       clearResult: () => {},\n *     };\n *   }\n * );\n * ```\n */\nfunction createSelectorFactory(memoize, options = {\n    stateFn: defaultStateFn,\n}) {\n    return function (...input) {\n        let args = input;\n        if (Array.isArray(args[0])) {\n            const [head, ...tail] = args;\n            args = [...head, ...tail];\n        }\n        else if (args.length === 1 && isSelectorsDictionary(args[0])) {\n            args = extractArgsFromSelectorsDictionary(args[0]);\n        }\n        const selectors = args.slice(0, args.length - 1);\n        const projector = args[args.length - 1];\n        const memoizedSelectors = selectors.filter((selector) => selector.release && typeof selector.release === 'function');\n        const memoizedProjector = memoize(function (...selectors) {\n            return projector.apply(null, selectors);\n        });\n        const memoizedState = defaultMemoize(function (state, props) {\n            return options.stateFn.apply(null, [\n                state,\n                selectors,\n                props,\n                memoizedProjector,\n            ]);\n        });\n        function release() {\n            memoizedState.reset();\n            memoizedProjector.reset();\n            memoizedSelectors.forEach((selector) => selector.release());\n        }\n        return Object.assign(memoizedState.memoized, {\n            release,\n            projector: memoizedProjector.memoized,\n            setResult: memoizedState.setResult,\n            clearResult: memoizedState.clearResult,\n        });\n    };\n}\nfunction createFeatureSelector(featureName) {\n    return createSelector((state) => {\n        const featureState = state[featureName];\n        if (!isNgrxMockEnvironment() && isDevMode() && !(featureName in state)) {\n            console.warn(`@ngrx/store: The feature name \"${featureName}\" does ` +\n                'not exist in the state, therefore createFeatureSelector ' +\n                'cannot access it.  Be sure it is imported in a loaded module ' +\n                `using StoreModule.forRoot('${featureName}', ...) or ` +\n                `StoreModule.forFeature('${featureName}', ...).  If the default ` +\n                'state is intended to be undefined, as is the case with router ' +\n                'state, this development-only warning message can be ignored.');\n        }\n        return featureState;\n    }, (featureState) => featureState);\n}\nfunction isSelectorsDictionary(selectors) {\n    return (!!selectors &&\n        typeof selectors === 'object' &&\n        Object.values(selectors).every((selector) => typeof selector === 'function'));\n}\nfunction extractArgsFromSelectorsDictionary(selectorsDictionary) {\n    const selectors = Object.values(selectorsDictionary);\n    const resultKeys = Object.keys(selectorsDictionary);\n    const projector = (...selectorResults) => resultKeys.reduce((result, key, index) => ({\n        ...result,\n        [key]: selectorResults[index],\n    }), {});\n    return [...selectors, projector];\n}\n\n/**\n * @description\n * A function that accepts a feature name and a feature reducer, and creates\n * a feature selector and a selector for each feature state property.\n * This function also provides the ability to add extra selectors to\n * the feature object.\n *\n * @param featureConfig An object that contains a feature name and a feature\n * reducer as required, and extra selectors factory as an optional argument.\n * @returns An object that contains a feature name, a feature reducer,\n * a feature selector, a selector for each feature state property, and extra\n * selectors.\n *\n * @usageNotes\n *\n * ```ts\n * interface ProductsState {\n *   products: Product[];\n *   selectedId: string | null;\n * }\n *\n * const initialState: ProductsState = {\n *   products: [],\n *   selectedId: null,\n * };\n *\n * const productsFeature = createFeature({\n *   name: 'products',\n *   reducer: createReducer(\n *     initialState,\n *     on(ProductsApiActions.loadSuccess(state, { products }) => ({\n *       ...state,\n *       products,\n *     }),\n *   ),\n * });\n *\n * const {\n *   name,\n *   reducer,\n *   // feature selector\n *   selectProductsState, // type: MemoizedSelector<Record<string, any>, ProductsState>\n *   // feature state properties selectors\n *   selectProducts, // type: MemoizedSelector<Record<string, any>, Product[]>\n *   selectSelectedId, // type: MemoizedSelector<Record<string, any>, string | null>\n * } = productsFeature;\n * ```\n *\n * **Creating Feature with Extra Selectors**\n *\n * ```ts\n * type CallState = 'init' | 'loading' | 'loaded' | { error: string };\n *\n * interface State extends EntityState<Product> {\n *   callState: CallState;\n * }\n *\n * const adapter = createEntityAdapter<Product>();\n * const initialState: State = adapter.getInitialState({\n *   callState: 'init',\n * });\n *\n * export const productsFeature = createFeature({\n *   name: 'products',\n *   reducer: createReducer(initialState),\n *   extraSelectors: ({ selectProductsState, selectCallState }) => ({\n *     ...adapter.getSelectors(selectProductsState),\n *     ...getCallStateSelectors(selectCallState)\n *   }),\n * });\n *\n * const {\n *   name,\n *   reducer,\n *   // feature selector\n *   selectProductsState,\n *   // feature state properties selectors\n *   selectIds,\n *   selectEntities,\n *   selectCallState,\n *   // selectors returned by `adapter.getSelectors`\n *   selectAll,\n *   selectTotal,\n *   // selectors returned by `getCallStateSelectors`\n *   selectIsLoading,\n *   selectIsLoaded,\n *   selectError,\n * } = productsFeature;\n * ```\n */\nfunction createFeature(featureConfig) {\n    const { name, reducer, extraSelectors: extraSelectorsFactory, } = featureConfig;\n    const featureSelector = createFeatureSelector(name);\n    const nestedSelectors = createNestedSelectors(featureSelector, reducer);\n    const baseSelectors = {\n        [`select${capitalize(name)}State`]: featureSelector,\n        ...nestedSelectors,\n    };\n    const extraSelectors = extraSelectorsFactory\n        ? extraSelectorsFactory(baseSelectors)\n        : {};\n    return {\n        name,\n        reducer,\n        ...baseSelectors,\n        ...extraSelectors,\n    };\n}\nfunction createNestedSelectors(featureSelector, reducer) {\n    const initialState = getInitialState(reducer);\n    const nestedKeys = (isPlainObject(initialState) ? Object.keys(initialState) : []);\n    return nestedKeys.reduce((nestedSelectors, nestedKey) => ({\n        ...nestedSelectors,\n        [`select${capitalize(nestedKey)}`]: createSelector(featureSelector, (parentState) => parentState?.[nestedKey]),\n    }), {});\n}\nfunction getInitialState(reducer) {\n    return reducer(undefined, { type: '@ngrx/feature/init' });\n}\n\nfunction _createStoreReducers(reducers) {\n    return reducers instanceof InjectionToken ? inject(reducers) : reducers;\n}\nfunction _createFeatureStore(configs, featureStores) {\n    return featureStores.map((feat, index) => {\n        if (configs[index] instanceof InjectionToken) {\n            const conf = inject(configs[index]);\n            return {\n                key: feat.key,\n                reducerFactory: conf.reducerFactory\n                    ? conf.reducerFactory\n                    : combineReducers,\n                metaReducers: conf.metaReducers ? conf.metaReducers : [],\n                initialState: conf.initialState,\n            };\n        }\n        return feat;\n    });\n}\nfunction _createFeatureReducers(reducerCollection) {\n    return reducerCollection.map((reducer) => {\n        return reducer instanceof InjectionToken ? inject(reducer) : reducer;\n    });\n}\nfunction _initialStateFactory(initialState) {\n    if (typeof initialState === 'function') {\n        return initialState();\n    }\n    return initialState;\n}\nfunction _concatMetaReducers(metaReducers, userProvidedMetaReducers) {\n    return metaReducers.concat(userProvidedMetaReducers);\n}\nfunction _provideForRootGuard() {\n    const store = inject(Store, { optional: true, skipSelf: true });\n    if (store) {\n        throw new TypeError(`The root Store has been provided more than once. Feature modules should provide feature states instead.`);\n    }\n    return 'guarded';\n}\n\nfunction immutabilityCheckMetaReducer(reducer, checks) {\n    return function (state, action) {\n        const act = checks.action(action) ? freeze(action) : action;\n        const nextState = reducer(state, act);\n        return checks.state() ? freeze(nextState) : nextState;\n    };\n}\nfunction freeze(target) {\n    Object.freeze(target);\n    const targetIsFunction = isFunction(target);\n    Object.getOwnPropertyNames(target).forEach((prop) => {\n        // Ignore Ivy properties, ref: https://github.com/ngrx/platform/issues/2109#issuecomment-582689060\n        if (prop.startsWith('ɵ')) {\n            return;\n        }\n        if (hasOwnProperty(target, prop) &&\n            (targetIsFunction\n                ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments'\n                : true)) {\n            const propValue = target[prop];\n            if ((isObjectLike(propValue) || isFunction(propValue)) &&\n                !Object.isFrozen(propValue)) {\n                freeze(propValue);\n            }\n        }\n    });\n    return target;\n}\n\nfunction serializationCheckMetaReducer(reducer, checks) {\n    return function (state, action) {\n        if (checks.action(action)) {\n            const unserializableAction = getUnserializable(action);\n            throwIfUnserializable(unserializableAction, 'action');\n        }\n        const nextState = reducer(state, action);\n        if (checks.state()) {\n            const unserializableState = getUnserializable(nextState);\n            throwIfUnserializable(unserializableState, 'state');\n        }\n        return nextState;\n    };\n}\nfunction getUnserializable(target, path = []) {\n    // Guard against undefined and null, e.g. a reducer that returns undefined\n    if ((isUndefined(target) || isNull(target)) && path.length === 0) {\n        return {\n            path: ['root'],\n            value: target,\n        };\n    }\n    const keys = Object.keys(target);\n    return keys.reduce((result, key) => {\n        if (result) {\n            return result;\n        }\n        const value = target[key];\n        // Ignore Ivy components\n        if (isComponent(value)) {\n            return result;\n        }\n        if (isUndefined(value) ||\n            isNull(value) ||\n            isNumber(value) ||\n            isBoolean(value) ||\n            isString(value) ||\n            isArray(value)) {\n            return false;\n        }\n        if (isPlainObject(value)) {\n            return getUnserializable(value, [...path, key]);\n        }\n        return {\n            path: [...path, key],\n            value,\n        };\n    }, false);\n}\nfunction throwIfUnserializable(unserializable, context) {\n    if (unserializable === false) {\n        return;\n    }\n    const unserializablePath = unserializable.path.join('.');\n    const error = new Error(`Detected unserializable ${context} at \"${unserializablePath}\". ${RUNTIME_CHECK_URL}#strict${context}serializability`);\n    error.value = unserializable.value;\n    error.unserializablePath = unserializablePath;\n    throw error;\n}\n\nfunction inNgZoneAssertMetaReducer(reducer, checks) {\n    return function (state, action) {\n        if (checks.action(action) && !i0.NgZone.isInAngularZone()) {\n            throw new Error(`Action '${action.type}' running outside NgZone. ${RUNTIME_CHECK_URL}#strictactionwithinngzone`);\n        }\n        return reducer(state, action);\n    };\n}\n\nfunction createActiveRuntimeChecks(runtimeChecks) {\n    if (isDevMode()) {\n        return {\n            strictStateSerializability: false,\n            strictActionSerializability: false,\n            strictStateImmutability: true,\n            strictActionImmutability: true,\n            strictActionWithinNgZone: false,\n            strictActionTypeUniqueness: false,\n            ...runtimeChecks,\n        };\n    }\n    return {\n        strictStateSerializability: false,\n        strictActionSerializability: false,\n        strictStateImmutability: false,\n        strictActionImmutability: false,\n        strictActionWithinNgZone: false,\n        strictActionTypeUniqueness: false,\n    };\n}\nfunction createSerializationCheckMetaReducer({ strictActionSerializability, strictStateSerializability, }) {\n    return (reducer) => strictActionSerializability || strictStateSerializability\n        ? serializationCheckMetaReducer(reducer, {\n            action: (action) => strictActionSerializability && !ignoreNgrxAction(action),\n            state: () => strictStateSerializability,\n        })\n        : reducer;\n}\nfunction createImmutabilityCheckMetaReducer({ strictActionImmutability, strictStateImmutability, }) {\n    return (reducer) => strictActionImmutability || strictStateImmutability\n        ? immutabilityCheckMetaReducer(reducer, {\n            action: (action) => strictActionImmutability && !ignoreNgrxAction(action),\n            state: () => strictStateImmutability,\n        })\n        : reducer;\n}\nfunction ignoreNgrxAction(action) {\n    return action.type.startsWith('@ngrx');\n}\nfunction createInNgZoneCheckMetaReducer({ strictActionWithinNgZone, }) {\n    return (reducer) => strictActionWithinNgZone\n        ? inNgZoneAssertMetaReducer(reducer, {\n            action: (action) => strictActionWithinNgZone && !ignoreNgrxAction(action),\n        })\n        : reducer;\n}\nfunction provideRuntimeChecks(runtimeChecks) {\n    return [\n        {\n            provide: _USER_RUNTIME_CHECKS,\n            useValue: runtimeChecks,\n        },\n        {\n            provide: USER_RUNTIME_CHECKS,\n            useFactory: _runtimeChecksFactory,\n            deps: [_USER_RUNTIME_CHECKS],\n        },\n        {\n            provide: ACTIVE_RUNTIME_CHECKS,\n            deps: [USER_RUNTIME_CHECKS],\n            useFactory: createActiveRuntimeChecks,\n        },\n        {\n            provide: META_REDUCERS,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: createImmutabilityCheckMetaReducer,\n        },\n        {\n            provide: META_REDUCERS,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: createSerializationCheckMetaReducer,\n        },\n        {\n            provide: META_REDUCERS,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: createInNgZoneCheckMetaReducer,\n        },\n    ];\n}\nfunction checkForActionTypeUniqueness() {\n    return [\n        {\n            provide: _ACTION_TYPE_UNIQUENESS_CHECK,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: _actionTypeUniquenessCheck,\n        },\n    ];\n}\nfunction _runtimeChecksFactory(runtimeChecks) {\n    return runtimeChecks;\n}\nfunction _actionTypeUniquenessCheck(config) {\n    if (!config.strictActionTypeUniqueness) {\n        return;\n    }\n    const duplicates = Object.entries(REGISTERED_ACTION_TYPES)\n        .filter(([, registrations]) => registrations > 1)\n        .map(([type]) => type);\n    if (duplicates.length) {\n        throw new Error(`Action types are registered more than once, ${duplicates\n            .map((type) => `\"${type}\"`)\n            .join(', ')}. ${RUNTIME_CHECK_URL}#strictactiontypeuniqueness`);\n    }\n}\n\n/**\n * Provides additional slices of state in the Store.\n * These providers cannot be used at the component level.\n *\n * @usageNotes\n *\n * ### Providing Store Features\n *\n * ```ts\n * const booksRoutes: Route[] = [\n *   {\n *     path: '',\n *     providers: [provideState('books', booksReducer)],\n *     children: [\n *       { path: '', component: BookListComponent },\n *       { path: ':id', component: BookDetailsComponent },\n *     ],\n *   },\n * ];\n * ```\n */\nfunction provideState(featureNameOrSlice, reducers, config = {}) {\n    return makeEnvironmentProviders([\n        ..._provideState(featureNameOrSlice, reducers, config),\n        ENVIRONMENT_STATE_PROVIDER,\n    ]);\n}\nfunction _provideStore(reducers = {}, config = {}) {\n    return [\n        {\n            provide: _ROOT_STORE_GUARD,\n            useFactory: _provideForRootGuard,\n        },\n        { provide: _INITIAL_STATE, useValue: config.initialState },\n        {\n            provide: INITIAL_STATE,\n            useFactory: _initialStateFactory,\n            deps: [_INITIAL_STATE],\n        },\n        { provide: _INITIAL_REDUCERS, useValue: reducers },\n        {\n            provide: _STORE_REDUCERS,\n            useExisting: reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS,\n        },\n        {\n            provide: INITIAL_REDUCERS,\n            deps: [_INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n            useFactory: _createStoreReducers,\n        },\n        {\n            provide: USER_PROVIDED_META_REDUCERS,\n            useValue: config.metaReducers ? config.metaReducers : [],\n        },\n        {\n            provide: _RESOLVED_META_REDUCERS,\n            deps: [META_REDUCERS, USER_PROVIDED_META_REDUCERS],\n            useFactory: _concatMetaReducers,\n        },\n        {\n            provide: _REDUCER_FACTORY,\n            useValue: config.reducerFactory ? config.reducerFactory : combineReducers,\n        },\n        {\n            provide: REDUCER_FACTORY,\n            deps: [_REDUCER_FACTORY, _RESOLVED_META_REDUCERS],\n            useFactory: createReducerFactory,\n        },\n        ACTIONS_SUBJECT_PROVIDERS,\n        REDUCER_MANAGER_PROVIDERS,\n        SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n        STATE_PROVIDERS,\n        STORE_PROVIDERS,\n        provideRuntimeChecks(config.runtimeChecks),\n        checkForActionTypeUniqueness(),\n    ];\n}\nfunction rootStoreProviderFactory() {\n    inject(ActionsSubject);\n    inject(ReducerObservable);\n    inject(ScannedActionsSubject);\n    inject(Store);\n    inject(_ROOT_STORE_GUARD, { optional: true });\n    inject(_ACTION_TYPE_UNIQUENESS_CHECK, { optional: true });\n}\n/**\n * Environment Initializer used in the root\n * providers to initialize the Store\n */\nconst ENVIRONMENT_STORE_PROVIDER = [\n    { provide: ROOT_STORE_PROVIDER, useFactory: rootStoreProviderFactory },\n    {\n        provide: ENVIRONMENT_INITIALIZER,\n        multi: true,\n        useFactory() {\n            return () => inject(ROOT_STORE_PROVIDER);\n        },\n    },\n];\n/**\n * Provides the global Store providers and initializes\n * the Store.\n * These providers cannot be used at the component level.\n *\n * @usageNotes\n *\n * ### Providing the Global Store\n *\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideStore()],\n * });\n * ```\n */\nfunction provideStore(reducers, config) {\n    return makeEnvironmentProviders([\n        ..._provideStore(reducers, config),\n        ENVIRONMENT_STORE_PROVIDER,\n    ]);\n}\nfunction featureStateProviderFactory() {\n    inject(ROOT_STORE_PROVIDER);\n    const features = inject(_STORE_FEATURES);\n    const featureReducers = inject(FEATURE_REDUCERS);\n    const reducerManager = inject(ReducerManager);\n    inject(_ACTION_TYPE_UNIQUENESS_CHECK, { optional: true });\n    const feats = features.map((feature, index) => {\n        const featureReducerCollection = featureReducers.shift();\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const reducers = featureReducerCollection /*TODO(#823)*/[index];\n        return {\n            ...feature,\n            reducers,\n            initialState: _initialStateFactory(feature.initialState),\n        };\n    });\n    reducerManager.addFeatures(feats);\n}\n/**\n * Environment Initializer used in the feature\n * providers to register state features\n */\nconst ENVIRONMENT_STATE_PROVIDER = [\n    {\n        provide: FEATURE_STATE_PROVIDER,\n        useFactory: featureStateProviderFactory,\n    },\n    {\n        provide: ENVIRONMENT_INITIALIZER,\n        multi: true,\n        useFactory() {\n            return () => inject(FEATURE_STATE_PROVIDER);\n        },\n    },\n];\nfunction _provideState(featureNameOrSlice, reducers, config = {}) {\n    return [\n        {\n            provide: _FEATURE_CONFIGS,\n            multi: true,\n            useValue: featureNameOrSlice instanceof Object ? {} : config,\n        },\n        {\n            provide: STORE_FEATURES,\n            multi: true,\n            useValue: {\n                key: featureNameOrSlice instanceof Object\n                    ? featureNameOrSlice.name\n                    : featureNameOrSlice,\n                reducerFactory: !(config instanceof InjectionToken) && config.reducerFactory\n                    ? config.reducerFactory\n                    : combineReducers,\n                metaReducers: !(config instanceof InjectionToken) && config.metaReducers\n                    ? config.metaReducers\n                    : [],\n                initialState: !(config instanceof InjectionToken) && config.initialState\n                    ? config.initialState\n                    : undefined,\n            },\n        },\n        {\n            provide: _STORE_FEATURES,\n            deps: [_FEATURE_CONFIGS, STORE_FEATURES],\n            useFactory: _createFeatureStore,\n        },\n        {\n            provide: _FEATURE_REDUCERS,\n            multi: true,\n            useValue: featureNameOrSlice instanceof Object\n                ? featureNameOrSlice.reducer\n                : reducers,\n        },\n        {\n            provide: _FEATURE_REDUCERS_TOKEN,\n            multi: true,\n            useExisting: reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS,\n        },\n        {\n            provide: FEATURE_REDUCERS,\n            multi: true,\n            deps: [_FEATURE_REDUCERS, [new Inject(_FEATURE_REDUCERS_TOKEN)]],\n            useFactory: _createFeatureReducers,\n        },\n        checkForActionTypeUniqueness(),\n    ];\n}\n\nclass StoreRootModule {\n    constructor(actions$, reducer$, scannedActions$, store, guard, actionCheck) { }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreRootModule, deps: [{ token: ActionsSubject }, { token: ReducerObservable }, { token: ScannedActionsSubject }, { token: Store }, { token: _ROOT_STORE_GUARD, optional: true }, { token: _ACTION_TYPE_UNIQUENESS_CHECK, optional: true }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreRootModule }); }\n    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreRootModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreRootModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }], ctorParameters: function () { return [{ type: ActionsSubject }, { type: ReducerObservable }, { type: ScannedActionsSubject }, { type: Store }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [_ROOT_STORE_GUARD]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n                }] }]; } });\nclass StoreFeatureModule {\n    constructor(features, featureReducers, reducerManager, root, actionCheck) {\n        this.features = features;\n        this.featureReducers = featureReducers;\n        this.reducerManager = reducerManager;\n        const feats = features.map((feature, index) => {\n            const featureReducerCollection = featureReducers.shift();\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const reducers = featureReducerCollection /*TODO(#823)*/[index];\n            return {\n                ...feature,\n                reducers,\n                initialState: _initialStateFactory(feature.initialState),\n            };\n        });\n        reducerManager.addFeatures(feats);\n    }\n    // eslint-disable-next-line @angular-eslint/contextual-lifecycle\n    ngOnDestroy() {\n        this.reducerManager.removeFeatures(this.features);\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreFeatureModule, deps: [{ token: _STORE_FEATURES }, { token: FEATURE_REDUCERS }, { token: ReducerManager }, { token: StoreRootModule }, { token: _ACTION_TYPE_UNIQUENESS_CHECK, optional: true }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreFeatureModule }); }\n    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreFeatureModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreFeatureModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_STORE_FEATURES]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [FEATURE_REDUCERS]\n                }] }, { type: ReducerManager }, { type: StoreRootModule }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n                }] }]; } });\nclass StoreModule {\n    static forRoot(reducers, config) {\n        return {\n            ngModule: StoreRootModule,\n            providers: [..._provideStore(reducers, config)],\n        };\n    }\n    static forFeature(featureNameOrSlice, reducers, config = {}) {\n        return {\n            ngModule: StoreFeatureModule,\n            providers: [..._provideState(featureNameOrSlice, reducers, config)],\n        };\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreModule }); }\n    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @description\n * Associates actions with a given state change function.\n * A state change function must be provided as the last parameter.\n *\n * @param args `ActionCreator`'s followed by a state change function.\n *\n * @returns an association of action types with a state change function.\n *\n * @usageNotes\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n */\nfunction on(...args) {\n    const reducer = args.pop();\n    const types = args.map((creator) => creator.type);\n    return { reducer, types };\n}\n/**\n * @description\n * Creates a reducer function to handle state transitions.\n *\n * Reducer creators reduce the explicitness of reducer functions with switch statements.\n *\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @param ons Associations between actions and state changes.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * - Must be used with `ActionCreator`'s (returned by `createAction`). Cannot be used with class-based action creators.\n * - The returned `ActionReducer` does not require being wrapped with another function.\n *\n * **Declaring a reducer creator**\n *\n * ```ts\n * export const reducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n * ```\n */\nfunction createReducer(initialState, ...ons) {\n    const map = new Map();\n    for (const on of ons) {\n        for (const type of on.types) {\n            const existingReducer = map.get(type);\n            if (existingReducer) {\n                const newReducer = (state, action) => on.reducer(existingReducer(state, action), action);\n                map.set(type, newReducer);\n            }\n            else {\n                map.set(type, on.reducer);\n            }\n        }\n    }\n    return function (state = initialState, action) {\n        const reducer = map.get(action.type);\n        return reducer ? reducer(state, action) : state;\n    };\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ACTIVE_RUNTIME_CHECKS, ActionsSubject, FEATURE_REDUCERS, FEATURE_STATE_PROVIDER, INIT, INITIAL_REDUCERS, INITIAL_STATE, META_REDUCERS, REDUCER_FACTORY, ROOT_STORE_PROVIDER, ReducerManager, ReducerManagerDispatcher, ReducerObservable, STORE_FEATURES, ScannedActionsSubject, State, StateObservable, Store, StoreFeatureModule, StoreModule, StoreRootModule, UPDATE, USER_PROVIDED_META_REDUCERS, USER_RUNTIME_CHECKS, combineReducers, compose, createAction, createActionGroup, createFeature, createFeatureSelector, createReducer, createReducerFactory, createSelector, createSelectorFactory, defaultMemoize, defaultStateFn, emptyProps, isNgrxMockEnvironment, on, props, provideState, provideStore, reduceState, resultMemoize, select, setNgrxMockEnvironment, union };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,MAArC,EAA6CC,QAA7C,EAAuDC,SAAvD,EAAkEC,MAAlE,EAA0EC,wBAA1E,EAAoGC,uBAApG,EAA6HC,QAA7H,EAAuIC,QAAvI,QAAuJ,eAAvJ;AACA,SAASC,eAAT,EAA0BC,UAA1B,EAAsCC,OAAtC,EAA+CC,cAA/C,QAAqE,MAArE;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,IAApC,EAA0CC,KAA1C,EAAiDC,GAAjD,EAAsDC,oBAAtD,QAAkF,gBAAlF;AACA,SAASC,QAAT,QAAyB,4BAAzB;AAEA,MAAMC,uBAAuB,GAAG,EAAhC;;AACA,SAASC,0BAAT,GAAsC;EAClC,KAAK,MAAMC,GAAX,IAAkBC,MAAM,CAACC,IAAP,CAAYJ,uBAAZ,CAAlB,EAAwD;IACpD,OAAOA,uBAAuB,CAACE,GAAD,CAA9B;EACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,YAAT,CAAsBC,IAAtB,EAA4BC,MAA5B,EAAoC;EAChCP,uBAAuB,CAACM,IAAD,CAAvB,GAAgC,CAACN,uBAAuB,CAACM,IAAD,CAAvB,IAAiC,CAAlC,IAAuC,CAAvE;;EACA,IAAI,OAAOC,MAAP,KAAkB,UAAtB,EAAkC;IAC9B,OAAOC,UAAU,CAACF,IAAD,EAAO,CAAC,GAAGG,IAAJ,MAAc,EAClC,GAAGF,MAAM,CAAC,GAAGE,IAAJ,CADyB;MAElCH;IAFkC,CAAd,CAAP,CAAjB;EAIH;;EACD,MAAMI,EAAE,GAAGH,MAAM,GAAGA,MAAM,CAACI,GAAV,GAAgB,OAAjC;;EACA,QAAQD,EAAR;IACI,KAAK,OAAL;MACI,OAAOF,UAAU,CAACF,IAAD,EAAO,OAAO;QAAEA;MAAF,CAAP,CAAP,CAAjB;;IACJ,KAAK,OAAL;MACI,OAAOE,UAAU,CAACF,IAAD,EAAQM,KAAD,KAAY,EAChC,GAAGA,KAD6B;QAEhCN;MAFgC,CAAZ,CAAP,CAAjB;;IAIJ;MACI,MAAM,IAAIO,KAAJ,CAAU,oBAAV,CAAN;EATR;AAWH;;AACD,SAASD,KAAT,GAAiB;EACb;EACA,OAAO;IAAED,GAAG,EAAE,OAAP;IAAgBG,EAAE,EAAEC;EAApB,CAAP;AACH;;AACD,SAASC,KAAT,CAAeC,QAAf,EAAyB;EACrB;EACA,OAAOF,SAAP;AACH;;AACD,SAASP,UAAT,CAAoBF,IAApB,EAA0BY,OAA1B,EAAmC;EAC/B,OAAOf,MAAM,CAACgB,cAAP,CAAsBD,OAAtB,EAA+B,MAA/B,EAAuC;IAC1CE,KAAK,EAAEd,IADmC;IAE1Ce,QAAQ,EAAE;EAFgC,CAAvC,CAAP;AAIH;;AAED,SAASC,UAAT,CAAoBC,IAApB,EAA0B;EACtB,OAAQA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BF,IAAI,CAACG,SAAL,CAAe,CAAf,CAAvC;AACH;;AACD,SAASC,YAAT,CAAsBJ,IAAtB,EAA4B;EACxB,OAAQA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeI,WAAf,KAA+BL,IAAI,CAACG,SAAL,CAAe,CAAf,CAAvC;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,iBAAT,CAA2BtB,MAA3B,EAAmC;EAC/B,MAAM;IAAEuB,MAAF;IAAUC;EAAV,IAAqBxB,MAA3B;EACA,OAAOJ,MAAM,CAACC,IAAP,CAAY2B,MAAZ,EAAoBC,MAApB,CAA2B,CAACC,WAAD,EAAcC,SAAd,MAA6B,EAC3D,GAAGD,WADwD;IAE3D,CAACE,YAAY,CAACD,SAAD,CAAb,GAA2B7B,YAAY,CAAC+B,YAAY,CAACN,MAAD,EAASI,SAAT,CAAb,EAAkCH,MAAM,CAACG,SAAD,CAAxC;EAFoB,CAA7B,CAA3B,EAGH,EAHG,CAAP;AAIH;;AACD,SAASG,UAAT,GAAsB;EAClB,OAAOzB,KAAK,EAAZ;AACH;;AACD,SAASuB,YAAT,CAAsBD,SAAtB,EAAiC;EAC7B,OAAOA,SAAS,CACXI,IADE,GAEFC,KAFE,CAEI,GAFJ,EAGF1C,GAHE,CAGE,CAAC2C,IAAD,EAAOC,CAAP,KAAcA,CAAC,KAAK,CAAN,GAAUd,YAAY,CAACa,IAAD,CAAtB,GAA+BlB,UAAU,CAACkB,IAAD,CAHzD,EAIFE,IAJE,CAIG,EAJH,CAAP;AAKH;;AACD,SAASN,YAAT,CAAsBN,MAAtB,EAA8BI,SAA9B,EAAyC;EACrC,OAAQ,IAAGJ,MAAO,KAAII,SAAU,EAAhC;AACH;;AAED,MAAMS,IAAI,GAAG,kBAAb;;AACA,MAAMC,cAAN,SAA6BvD,eAA7B,CAA6C;EACzCwD,WAAW,GAAG;IACV,MAAM;MAAEvC,IAAI,EAAEqC;IAAR,CAAN;EACH;;EACDG,IAAI,CAACC,MAAD,EAAS;IACT,IAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;MAC9B,MAAM,IAAIC,SAAJ,CAAe;AACjC;AACA;AACA,uFAHkB,CAAN;IAIH,CALD,MAMK,IAAI,OAAOD,MAAP,KAAkB,WAAtB,EAAmC;MACpC,MAAM,IAAIC,SAAJ,CAAe,yBAAf,CAAN;IACH,CAFI,MAGA,IAAI,OAAOD,MAAM,CAACzC,IAAd,KAAuB,WAA3B,EAAwC;MACzC,MAAM,IAAI0C,SAAJ,CAAe,mCAAf,CAAN;IACH;;IACD,MAAMF,IAAN,CAAWC,MAAX;EACH;;EACDE,QAAQ,GAAG;IACP;EACH;;EACDC,WAAW,GAAG;IACV,MAAMD,QAAN;EACH;EACD;;;EAzByC,YAyBb,KAAKE,IAAL;IAAA,iBAAiGP,cAAjG;EAAA,CAzBa;EA0BzC;;EA1ByC,aA0Bb,KAAKQ,KAAL,kBADuF1E,EACvF;IAAA,OAAqGkE,cAArG;IAAA,SAAqGA,cAArG;EAAA,EA1Ba;AAAA;;AA4B7C;EAAA,mDAHuHlE,EAGvH,mBAA2FkE,cAA3F,EAAuH,CAAC;IAC5GtC,IAAI,EAAE3B;EADsG,CAAD,CAAvH,EAE4B,YAAY;IAAE,OAAO,EAAP;EAAY,CAFtD;AAAA;;AAGA,MAAM0E,yBAAyB,GAAG,CAACT,cAAD,CAAlC;;AAEA,MAAMU,iBAAiB,GAAG,IAAI1E,cAAJ,CAAmB,iCAAnB,CAA1B;;AACA,MAAM2E,cAAc,GAAG,IAAI3E,cAAJ,CAAmB,oCAAnB,CAAvB;;AACA,MAAM4E,aAAa,GAAG,IAAI5E,cAAJ,CAAmB,2BAAnB,CAAtB;AACA,MAAM6E,eAAe,GAAG,IAAI7E,cAAJ,CAAmB,6BAAnB,CAAxB;;AACA,MAAM8E,gBAAgB,GAAG,IAAI9E,cAAJ,CAAmB,+CAAnB,CAAzB;;AACA,MAAM+E,gBAAgB,GAAG,IAAI/E,cAAJ,CAAmB,8BAAnB,CAAzB;;AACA,MAAMgF,iBAAiB,GAAG,IAAIhF,cAAJ,CAAmB,uCAAnB,CAA1B;;AACA,MAAMiF,cAAc,GAAG,IAAIjF,cAAJ,CAAmB,4BAAnB,CAAvB;;AACA,MAAMkF,eAAe,GAAG,IAAIlF,cAAJ,CAAmB,qCAAnB,CAAxB;;AACA,MAAMmF,iBAAiB,GAAG,IAAInF,cAAJ,CAAmB,uCAAnB,CAA1B;;AACA,MAAMoF,gBAAgB,GAAG,IAAIpF,cAAJ,CAAmB,sCAAnB,CAAzB;;AACA,MAAMqF,eAAe,GAAG,IAAIrF,cAAJ,CAAmB,qCAAnB,CAAxB;;AACA,MAAMsF,uBAAuB,GAAG,IAAItF,cAAJ,CAAmB,6CAAnB,CAAhC;;AACA,MAAMuF,gBAAgB,GAAG,IAAIvF,cAAJ,CAAmB,8BAAnB,CAAzB;AACA;AACA;AACA;;AACA,MAAMwF,2BAA2B,GAAG,IAAIxF,cAAJ,CAAmB,yCAAnB,CAApC;AACA;AACA;AACA;;AACA,MAAMyF,aAAa,GAAG,IAAIzF,cAAJ,CAAmB,2BAAnB,CAAtB;AACA;AACA;AACA;AACA;;AACA,MAAM0F,uBAAuB,GAAG,IAAI1F,cAAJ,CAAmB,6CAAnB,CAAhC;AACA;AACA;AACA;AACA;;;AACA,MAAM2F,mBAAmB,GAAG,IAAI3F,cAAJ,CAAmB,wCAAnB,CAA5B;AACA;AACA;AACA;;AACA,MAAM4F,oBAAoB,GAAG,IAAI5F,cAAJ,CAAmB,iDAAnB,CAA7B;AACA;AACA;AACA;;;AACA,MAAM6F,qBAAqB,GAAG,IAAI7F,cAAJ,CAAmB,qCAAnB,CAA9B;;AACA,MAAM8F,6BAA6B,GAAG,IAAI9F,cAAJ,CAAmB,8CAAnB,CAAtC;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM+F,mBAAmB,GAAG,IAAI/F,cAAJ,CAAmB,iCAAnB,CAA5B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMgG,sBAAsB,GAAG,IAAIhG,cAAJ,CAAmB,oCAAnB,CAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASiG,eAAT,CAAyBC,QAAzB,EAAmCC,YAAY,GAAG,EAAlD,EAAsD;EAClD,MAAMC,WAAW,GAAG7E,MAAM,CAACC,IAAP,CAAY0E,QAAZ,CAApB;EACA,MAAMG,aAAa,GAAG,EAAtB;;EACA,KAAK,IAAIxC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuC,WAAW,CAACE,MAAhC,EAAwCzC,CAAC,EAAzC,EAA6C;IACzC,MAAMvC,GAAG,GAAG8E,WAAW,CAACvC,CAAD,CAAvB;;IACA,IAAI,OAAOqC,QAAQ,CAAC5E,GAAD,CAAf,KAAyB,UAA7B,EAAyC;MACrC+E,aAAa,CAAC/E,GAAD,CAAb,GAAqB4E,QAAQ,CAAC5E,GAAD,CAA7B;IACH;EACJ;;EACD,MAAMiF,gBAAgB,GAAGhF,MAAM,CAACC,IAAP,CAAY6E,aAAZ,CAAzB;EACA,OAAO,SAASG,WAAT,CAAqBC,KAArB,EAA4BtC,MAA5B,EAAoC;IACvCsC,KAAK,GAAGA,KAAK,KAAKtE,SAAV,GAAsBgE,YAAtB,GAAqCM,KAA7C;IACA,IAAIC,UAAU,GAAG,KAAjB;IACA,MAAMC,SAAS,GAAG,EAAlB;;IACA,KAAK,IAAI9C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0C,gBAAgB,CAACD,MAArC,EAA6CzC,CAAC,EAA9C,EAAkD;MAC9C,MAAMvC,GAAG,GAAGiF,gBAAgB,CAAC1C,CAAD,CAA5B;MACA,MAAM+C,OAAO,GAAGP,aAAa,CAAC/E,GAAD,CAA7B;MACA,MAAMuF,mBAAmB,GAAGJ,KAAK,CAACnF,GAAD,CAAjC;MACA,MAAMwF,eAAe,GAAGF,OAAO,CAACC,mBAAD,EAAsB1C,MAAtB,CAA/B;MACAwC,SAAS,CAACrF,GAAD,CAAT,GAAiBwF,eAAjB;MACAJ,UAAU,GAAGA,UAAU,IAAII,eAAe,KAAKD,mBAA/C;IACH;;IACD,OAAOH,UAAU,GAAGC,SAAH,GAAeF,KAAhC;EACH,CAbD;AAcH;;AACD,SAASM,IAAT,CAAcC,MAAd,EAAsBC,WAAtB,EAAmC;EAC/B,OAAO1F,MAAM,CAACC,IAAP,CAAYwF,MAAZ,EACFE,MADE,CACM5F,GAAD,IAASA,GAAG,KAAK2F,WADtB,EAEF7D,MAFE,CAEK,CAAC+D,MAAD,EAAS7F,GAAT,KAAiBC,MAAM,CAAC6F,MAAP,CAAcD,MAAd,EAAsB;IAAE,CAAC7F,GAAD,GAAO0F,MAAM,CAAC1F,GAAD;EAAf,CAAtB,CAFtB,EAEqE,EAFrE,CAAP;AAGH;;AACD,SAAS+F,OAAT,CAAiB,GAAGC,SAApB,EAA+B;EAC3B,OAAO,UAAUC,GAAV,EAAe;IAClB,IAAID,SAAS,CAAChB,MAAV,KAAqB,CAAzB,EAA4B;MACxB,OAAOiB,GAAP;IACH;;IACD,MAAMC,IAAI,GAAGF,SAAS,CAACA,SAAS,CAAChB,MAAV,GAAmB,CAApB,CAAtB;IACA,MAAMmB,IAAI,GAAGH,SAAS,CAACI,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CAAb;IACA,OAAOD,IAAI,CAACE,WAAL,CAAiB,CAACC,QAAD,EAAWC,EAAX,KAAkBA,EAAE,CAACD,QAAD,CAArC,EAAiDJ,IAAI,CAACD,GAAD,CAArD,CAAP;EACH,CAPD;AAQH;;AACD,SAASO,oBAAT,CAA8BC,cAA9B,EAA8CC,YAA9C,EAA4D;EACxD,IAAIC,KAAK,CAACC,OAAN,CAAcF,YAAd,KAA+BA,YAAY,CAAC1B,MAAb,GAAsB,CAAzD,EAA4D;IACxDyB,cAAc,GAAGV,OAAO,CAACc,KAAR,CAAc,IAAd,EAAoB,CACjC,GAAGH,YAD8B,EAEjCD,cAFiC,CAApB,CAAjB;EAIH;;EACD,OAAO,CAAC7B,QAAD,EAAWC,YAAX,KAA4B;IAC/B,MAAMS,OAAO,GAAGmB,cAAc,CAAC7B,QAAD,CAA9B;IACA,OAAO,CAACO,KAAD,EAAQtC,MAAR,KAAmB;MACtBsC,KAAK,GAAGA,KAAK,KAAKtE,SAAV,GAAsBgE,YAAtB,GAAqCM,KAA7C;MACA,OAAOG,OAAO,CAACH,KAAD,EAAQtC,MAAR,CAAd;IACH,CAHD;EAIH,CAND;AAOH;;AACD,SAASiE,2BAAT,CAAqCJ,YAArC,EAAmD;EAC/C,MAAMD,cAAc,GAAGE,KAAK,CAACC,OAAN,CAAcF,YAAd,KAA+BA,YAAY,CAAC1B,MAAb,GAAsB,CAArD,GACjBe,OAAO,CAAC,GAAGW,YAAJ,CADU,GAEhBK,CAAD,IAAOA,CAFb;EAGA,OAAO,CAACzB,OAAD,EAAUT,YAAV,KAA2B;IAC9BS,OAAO,GAAGmB,cAAc,CAACnB,OAAD,CAAxB;IACA,OAAO,CAACH,KAAD,EAAQtC,MAAR,KAAmB;MACtBsC,KAAK,GAAGA,KAAK,KAAKtE,SAAV,GAAsBgE,YAAtB,GAAqCM,KAA7C;MACA,OAAOG,OAAO,CAACH,KAAD,EAAQtC,MAAR,CAAd;IACH,CAHD;EAIH,CAND;AAOH;;AAED,MAAMmE,iBAAN,SAAgC5H,UAAhC,CAA2C;;AAE3C,MAAM6H,wBAAN,SAAuCvE,cAAvC,CAAsD;;AAEtD,MAAMwE,MAAM,GAAG,6BAAf;;AACA,MAAMC,cAAN,SAA6BhI,eAA7B,CAA6C;EACtB,IAAfiI,eAAe,GAAG;IAClB,OAAO,KAAKxC,QAAZ;EACH;;EACDjC,WAAW,CAAC0E,UAAD,EAAaxC,YAAb,EAA2BD,QAA3B,EAAqC6B,cAArC,EAAqD;IAC5D,MAAMA,cAAc,CAAC7B,QAAD,EAAWC,YAAX,CAApB;IACA,KAAKwC,UAAL,GAAkBA,UAAlB;IACA,KAAKxC,YAAL,GAAoBA,YAApB;IACA,KAAKD,QAAL,GAAgBA,QAAhB;IACA,KAAK6B,cAAL,GAAsBA,cAAtB;EACH;;EACDa,UAAU,CAACC,OAAD,EAAU;IAChB,KAAKC,WAAL,CAAiB,CAACD,OAAD,CAAjB;EACH;;EACDC,WAAW,CAACC,QAAD,EAAW;IAClB,MAAM7C,QAAQ,GAAG6C,QAAQ,CAAC3F,MAAT,CAAgB,CAAC4F,WAAD,EAAc;MAAE9C,QAAF;MAAY6B,cAAZ;MAA4BC,YAA5B;MAA0C7B,YAA1C;MAAwD7E;IAAxD,CAAd,KAAgF;MAC7G,MAAMsF,OAAO,GAAG,OAAOV,QAAP,KAAoB,UAApB,GACVkC,2BAA2B,CAACJ,YAAD,CAA3B,CAA0C9B,QAA1C,EAAoDC,YAApD,CADU,GAEV2B,oBAAoB,CAACC,cAAD,EAAiBC,YAAjB,CAApB,CAAmD9B,QAAnD,EAA6DC,YAA7D,CAFN;MAGA6C,WAAW,CAAC1H,GAAD,CAAX,GAAmBsF,OAAnB;MACA,OAAOoC,WAAP;IACH,CANgB,EAMd,EANc,CAAjB;IAOA,KAAKC,WAAL,CAAiB/C,QAAjB;EACH;;EACDgD,aAAa,CAACL,OAAD,EAAU;IACnB,KAAKM,cAAL,CAAoB,CAACN,OAAD,CAApB;EACH;;EACDM,cAAc,CAACJ,QAAD,EAAW;IACrB,KAAKK,cAAL,CAAoBL,QAAQ,CAAC9H,GAAT,CAAcoI,CAAD,IAAOA,CAAC,CAAC/H,GAAtB,CAApB;EACH;;EACDgI,UAAU,CAAChI,GAAD,EAAMsF,OAAN,EAAe;IACrB,KAAKqC,WAAL,CAAiB;MAAE,CAAC3H,GAAD,GAAOsF;IAAT,CAAjB;EACH;;EACDqC,WAAW,CAAC/C,QAAD,EAAW;IAClB,KAAKA,QAAL,GAAgB,EAAE,GAAG,KAAKA,QAAV;MAAoB,GAAGA;IAAvB,CAAhB;IACA,KAAKqD,cAAL,CAAoBhI,MAAM,CAACC,IAAP,CAAY0E,QAAZ,CAApB;EACH;;EACDsD,aAAa,CAACC,UAAD,EAAa;IACtB,KAAKL,cAAL,CAAoB,CAACK,UAAD,CAApB;EACH;;EACDL,cAAc,CAACM,WAAD,EAAc;IACxBA,WAAW,CAACC,OAAZ,CAAqBrI,GAAD,IAAS;MACzB,KAAK4E,QAAL,GAAgBa,IAAI,CAAC,KAAKb,QAAN,EAAgB5E,GAAhB;MAAqB;MAAzC;IACH,CAFD;IAGA,KAAKiI,cAAL,CAAoBG,WAApB;EACH;;EACDH,cAAc,CAACG,WAAD,EAAc;IACxB,KAAKxF,IAAL,CAAU,KAAK6D,cAAL,CAAoB,KAAK7B,QAAzB,EAAmC,KAAKC,YAAxC,CAAV;IACA,KAAKwC,UAAL,CAAgBzE,IAAhB,CAAqB;MACjBxC,IAAI,EAAE8G,MADW;MAEjBO,QAAQ,EAAEW;IAFO,CAArB;EAIH;;EACDpF,WAAW,GAAG;IACV,KAAKD,QAAL;EACH;EACD;;;EAxDyC,YAwDb,KAAKE,IAAL;IAAA,iBAAiGkE,cAAjG,EAlOuF3I,EAkOvF,UAAiIyI,wBAAjI,GAlOuFzI,EAkOvF,UAAsK8E,aAAtK,GAlOuF9E,EAkOvF,UAAgMiF,gBAAhM,GAlOuFjF,EAkOvF,UAA6N+E,eAA7N;EAAA,CAxDa;EAyDzC;;EAzDyC,aAyDb,KAAKL,KAAL,kBAnOuF1E,EAmOvF;IAAA,OAAqG2I,cAArG;IAAA,SAAqGA,cAArG;EAAA,EAzDa;AAAA;;AA2D7C;EAAA,mDArOuH3I,EAqOvH,mBAA2F2I,cAA3F,EAAuH,CAAC;IAC5G/G,IAAI,EAAE3B;EADsG,CAAD,CAAvH,EAE4B,YAAY;IAAE,OAAO,CAAC;MAAE2B,IAAI,EAAE6G;IAAR,CAAD,EAAqC;MAAE7G,IAAI,EAAES,SAAR;MAAmByH,UAAU,EAAE,CAAC;QAClGlI,IAAI,EAAEzB,MAD4F;QAElG4B,IAAI,EAAE,CAAC+C,aAAD;MAF4F,CAAD;IAA/B,CAArC,EAG3B;MAAElD,IAAI,EAAES,SAAR;MAAmByH,UAAU,EAAE,CAAC;QAClClI,IAAI,EAAEzB,MAD4B;QAElC4B,IAAI,EAAE,CAACkD,gBAAD;MAF4B,CAAD;IAA/B,CAH2B,EAM3B;MAAErD,IAAI,EAAES,SAAR;MAAmByH,UAAU,EAAE,CAAC;QAClClI,IAAI,EAAEzB,MAD4B;QAElC4B,IAAI,EAAE,CAACgD,eAAD;MAF4B,CAAD;IAA/B,CAN2B,CAAP;EASlB,CAXxB;AAAA;;AAYA,MAAMgF,yBAAyB,GAAG,CAC9BpB,cAD8B,EAE9B;EAAEqB,OAAO,EAAExB,iBAAX;EAA8ByB,WAAW,EAAEtB;AAA3C,CAF8B,EAG9B;EAAEqB,OAAO,EAAEvB,wBAAX;EAAqCwB,WAAW,EAAE/F;AAAlD,CAH8B,CAAlC;;AAMA,MAAMgG,qBAAN,SAAoCrJ,OAApC,CAA4C;EACxC2D,WAAW,GAAG;IACV,KAAKD,QAAL;EACH;EACD;;;EAJwC,YAIZ,KAAKE,IAAL;IAAA;IAAA;MAAA,oFA3PuFzE,EA2PvF,uBAAiGkK,qBAAjG,SAAiGA,qBAAjG;IAAA;EAAA,GAJY;EAKxC;;EALwC,aAKZ,KAAKxF,KAAL,kBA5PuF1E,EA4PvF;IAAA,OAAqGkK,qBAArG;IAAA,SAAqGA,qBAArG;EAAA,EALY;AAAA;;AAO5C;EAAA,mDA9PuHlK,EA8PvH,mBAA2FkK,qBAA3F,EAA8H,CAAC;IACnHtI,IAAI,EAAE3B;EAD6G,CAAD,CAA9H;AAAA;;AAGA,MAAMkK,iCAAiC,GAAG,CACtCD,qBADsC,CAA1C;;AAIA,MAAME,eAAN,SAA8BxJ,UAA9B,CAAyC;;AAEzC,MAAMyJ,KAAN,SAAoB1J,eAApB,CAAoC;EAAA,YACvB,KAAKsD,IAAL,GAAYA,IADW;;EAEhCE,WAAW,CAACmG,QAAD,EAAWC,QAAX,EAAqBC,cAArB,EAAqCnE,YAArC,EAAmD;IAC1D,MAAMA,YAAN;IACA,MAAMoE,eAAe,GAAGH,QAAQ,CAACI,IAAT,CAAc3J,SAAS,CAACD,cAAD,CAAvB,CAAxB;IACA,MAAM6J,kBAAkB,GAAGF,eAAe,CAACC,IAAhB,CAAqB1J,cAAc,CAACuJ,QAAD,CAAnC,CAA3B;IACA,MAAMK,IAAI,GAAG;MAAEjE,KAAK,EAAEN;IAAT,CAAb;IACA,MAAMwE,eAAe,GAAGF,kBAAkB,CAACD,IAAnB,CAAwBzJ,IAAI,CAAC6J,WAAD,EAAcF,IAAd,CAA5B,CAAxB;IACA,KAAKG,iBAAL,GAAyBF,eAAe,CAACG,SAAhB,CAA0B,CAAC;MAAErE,KAAF;MAAStC;IAAT,CAAD,KAAuB;MACtE,KAAKD,IAAL,CAAUuC,KAAV;MACA6D,cAAc,CAACpG,IAAf,CAAoBC,MAApB;IACH,CAHwB,CAAzB;IAIA,KAAKsC,KAAL,GAAatF,QAAQ,CAAC,IAAD,EAAO;MAAE4J,aAAa,EAAE,IAAjB;MAAuBC,WAAW,EAAE;IAApC,CAAP,CAArB;EACH;;EACD1G,WAAW,GAAG;IACV,KAAKuG,iBAAL,CAAuBI,WAAvB;IACA,KAAK5G,QAAL;EACH;EACD;;;EAlBgC,aAkBJ,KAAKE,IAAL;IAAA,iBAAiG4F,KAAjG,EAzRuFrK,EAyRvF,UAAwHkE,cAAxH,GAzRuFlE,EAyRvF,UAAmJwI,iBAAnJ,GAzRuFxI,EAyRvF,UAAiLkK,qBAAjL,GAzRuFlK,EAyRvF,UAAmN8E,aAAnN;EAAA,CAlBI;EAmBhC;;EAnBgC,aAmBJ,KAAKJ,KAAL,kBA1RuF1E,EA0RvF;IAAA,OAAqGqK,KAArG;IAAA,SAAqGA,KAArG;EAAA,EAnBI;AAAA;;AAqBpC;EAAA,mDA5RuHrK,EA4RvH,mBAA2FqK,KAA3F,EAA8G,CAAC;IACnGzI,IAAI,EAAE3B;EAD6F,CAAD,CAA9G,EAE4B,YAAY;IAAE,OAAO,CAAC;MAAE2B,IAAI,EAAEsC;IAAR,CAAD,EAA2B;MAAEtC,IAAI,EAAE4G;IAAR,CAA3B,EAAwD;MAAE5G,IAAI,EAAEsI;IAAR,CAAxD,EAAyF;MAAEtI,IAAI,EAAES,SAAR;MAAmByH,UAAU,EAAE,CAAC;QACtJlI,IAAI,EAAEzB,MADgJ;QAEtJ4B,IAAI,EAAE,CAAC+C,aAAD;MAFgJ,CAAD;IAA/B,CAAzF,CAAP;EAGlB,CALxB;AAAA;;AAMA,SAASgG,WAAT,CAAqBM,eAAe,GAAG;EAAEzE,KAAK,EAAEtE;AAAT,CAAvC,EAA6D,CAACgC,MAAD,EAASyC,OAAT,CAA7D,EAAgF;EAC5E,MAAM;IAAEH;EAAF,IAAYyE,eAAlB;EACA,OAAO;IAAEzE,KAAK,EAAEG,OAAO,CAACH,KAAD,EAAQtC,MAAR,CAAhB;IAAiCA;EAAjC,CAAP;AACH;;AACD,MAAMgH,eAAe,GAAG,CACpBhB,KADoB,EAEpB;EAAEL,OAAO,EAAEI,eAAX;EAA4BH,WAAW,EAAEI;AAAzC,CAFoB,CAAxB,C,CAKA;;AACA,MAAMiB,KAAN,SAAoB1K,UAApB,CAA+B;EAC3BuD,WAAW,CAACoH,MAAD,EAASC,eAAT,EAA0BC,cAA1B,EAA0C;IACjD;IACA,KAAKD,eAAL,GAAuBA,eAAvB;IACA,KAAKC,cAAL,GAAsBA,cAAtB;IACA,KAAKrI,MAAL,GAAcmI,MAAd;IACA,KAAK5E,KAAL,GAAa4E,MAAM,CAAC5E,KAApB;EACH;;EACD+E,MAAM,CAACC,WAAD,EAAc,GAAGC,KAAjB,EAAwB;IAC1B,OAAOF,MAAM,CAACG,IAAP,CAAY,IAAZ,EAAkBF,WAAlB,EAA+B,GAAGC,KAAlC,EAAyC,IAAzC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIE,YAAY,CAACC,QAAD,EAAWC,OAAX,EAAoB;IAC5B,OAAO5L,QAAQ,CAAC,MAAM2L,QAAQ,CAAC,KAAKpF,KAAL,EAAD,CAAf,EAA+B;MAC1CsF,KAAK,EAAED,OAAO,EAAEC,KAAT,KAAmB,CAACC,QAAD,EAAWC,OAAX,KAAuBD,QAAQ,KAAKC,OAAvD;IADmC,CAA/B,CAAf;EAGH;;EACDC,IAAI,CAACC,QAAD,EAAW;IACX,MAAMC,KAAK,GAAG,IAAIhB,KAAJ,CAAU,IAAV,EAAgB,KAAKE,eAArB,EAAsC,KAAKC,cAA3C,CAAd;IACAa,KAAK,CAACD,QAAN,GAAiBA,QAAjB;IACA,OAAOC,KAAP;EACH;;EACDC,QAAQ,CAAClI,MAAD,EAAS;IACb,KAAKmH,eAAL,CAAqBpH,IAArB,CAA0BC,MAA1B;EACH;;EACDD,IAAI,CAACC,MAAD,EAAS;IACT,KAAKmH,eAAL,CAAqBpH,IAArB,CAA0BC,MAA1B;EACH;;EACDmI,KAAK,CAACC,GAAD,EAAM;IACP,KAAKjB,eAAL,CAAqBgB,KAArB,CAA2BC,GAA3B;EACH;;EACDlI,QAAQ,GAAG;IACP,KAAKiH,eAAL,CAAqBjH,QAArB;EACH;;EACDiF,UAAU,CAAChI,GAAD,EAAMsF,OAAN,EAAe;IACrB,KAAK2E,cAAL,CAAoBjC,UAApB,CAA+BhI,GAA/B,EAAoCsF,OAApC;EACH;;EACD4C,aAAa,CAAClI,GAAD,EAAM;IACf,KAAKiK,cAAL,CAAoB/B,aAApB,CAAkClI,GAAlC;EACH;EACD;;;EA7C2B,YA6CC,KAAKiD,IAAL;IAAA,iBAAiG6G,KAAjG,EAzVuFtL,EAyVvF,UAAwHoK,eAAxH,GAzVuFpK,EAyVvF,UAAoJkE,cAApJ,GAzVuFlE,EAyVvF,UAA+K2I,cAA/K;EAAA,CA7CD;EA8C3B;;EA9C2B,aA8CC,KAAKjE,KAAL,kBA1VuF1E,EA0VvF;IAAA,OAAqGsL,KAArG;IAAA,SAAqGA,KAArG;EAAA,EA9CD;AAAA;;AAgD/B;EAAA,mDA5VuHtL,EA4VvH,mBAA2FsL,KAA3F,EAA8G,CAAC;IACnG1J,IAAI,EAAE3B;EAD6F,CAAD,CAA9G,EAE4B,YAAY;IAAE,OAAO,CAAC;MAAE2B,IAAI,EAAEwI;IAAR,CAAD,EAA4B;MAAExI,IAAI,EAAEsC;IAAR,CAA5B,EAAsD;MAAEtC,IAAI,EAAE+G;IAAR,CAAtD,CAAP;EAAyF,CAFnI;AAAA;;AAGA,MAAM+D,eAAe,GAAG,CAACpB,KAAD,CAAxB;;AACA,SAASI,MAAT,CAAgBC,WAAhB,EAA6BgB,WAA7B,EAA0C,GAAGf,KAA7C,EAAoD;EAChD,OAAO,SAASgB,cAAT,CAAwBC,OAAxB,EAAiC;IACpC,IAAIC,OAAJ;;IACA,IAAI,OAAOnB,WAAP,KAAuB,QAA3B,EAAqC;MACjC,MAAMoB,UAAU,GAAG,CAACJ,WAAD,EAAc,GAAGf,KAAjB,EAAwBxE,MAAxB,CAA+B4F,OAA/B,CAAnB;MACAF,OAAO,GAAGD,OAAO,CAACnC,IAAR,CAAaxJ,KAAK,CAACyK,WAAD,EAAc,GAAGoB,UAAjB,CAAlB,CAAV;IACH,CAHD,MAIK,IAAI,OAAOpB,WAAP,KAAuB,UAA3B,EAAuC;MACxCmB,OAAO,GAAGD,OAAO,CAACnC,IAAR,CAAavJ,GAAG,CAAEiC,MAAD,IAAYuI,WAAW,CAACvI,MAAD,EAASuJ,WAAT,CAAxB,CAAhB,CAAV;IACH,CAFI,MAGA;MACD,MAAM,IAAIrI,SAAJ,CAAe,oBAAmB,OAAOqH,WAAY,uBAAvC,GACf,kCADC,CAAN;IAEH;;IACD,OAAOmB,OAAO,CAACpC,IAAR,CAAatJ,oBAAoB,EAAjC,CAAP;EACH,CAdD;AAeH;;AAED,MAAM6L,iBAAiB,GAAG,0DAA1B;;AACA,SAASC,WAAT,CAAqBC,MAArB,EAA6B;EACzB,OAAOA,MAAM,KAAK9K,SAAlB;AACH;;AACD,SAAS+K,MAAT,CAAgBD,MAAhB,EAAwB;EACpB,OAAOA,MAAM,KAAK,IAAlB;AACH;;AACD,SAAS/E,OAAT,CAAiB+E,MAAjB,EAAyB;EACrB,OAAOhF,KAAK,CAACC,OAAN,CAAc+E,MAAd,CAAP;AACH;;AACD,SAASE,QAAT,CAAkBF,MAAlB,EAA0B;EACtB,OAAO,OAAOA,MAAP,KAAkB,QAAzB;AACH;;AACD,SAASG,SAAT,CAAmBH,MAAnB,EAA2B;EACvB,OAAO,OAAOA,MAAP,KAAkB,SAAzB;AACH;;AACD,SAASI,QAAT,CAAkBJ,MAAlB,EAA0B;EACtB,OAAO,OAAOA,MAAP,KAAkB,QAAzB;AACH;;AACD,SAASK,YAAT,CAAsBL,MAAtB,EAA8B;EAC1B,OAAO,OAAOA,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,KAAK,IAAhD;AACH;;AACD,SAASM,QAAT,CAAkBN,MAAlB,EAA0B;EACtB,OAAOK,YAAY,CAACL,MAAD,CAAZ,IAAwB,CAAC/E,OAAO,CAAC+E,MAAD,CAAvC;AACH;;AACD,SAASO,aAAT,CAAuBP,MAAvB,EAA+B;EAC3B,IAAI,CAACM,QAAQ,CAACN,MAAD,CAAb,EAAuB;IACnB,OAAO,KAAP;EACH;;EACD,MAAMQ,eAAe,GAAGlM,MAAM,CAACmM,cAAP,CAAsBT,MAAtB,CAAxB;EACA,OAAOQ,eAAe,KAAKlM,MAAM,CAACoM,SAA3B,IAAwCF,eAAe,KAAK,IAAnE;AACH;;AACD,SAASG,UAAT,CAAoBX,MAApB,EAA4B;EACxB,OAAO,OAAOA,MAAP,KAAkB,UAAzB;AACH;;AACD,SAASY,WAAT,CAAqBZ,MAArB,EAA6B;EACzB,OAAOW,UAAU,CAACX,MAAD,CAAV,IAAsBA,MAAM,CAACa,cAAP,CAAsB,MAAtB,CAA7B;AACH;;AACD,SAASA,cAAT,CAAwBb,MAAxB,EAAgCc,YAAhC,EAA8C;EAC1C,OAAOxM,MAAM,CAACoM,SAAP,CAAiBG,cAAjB,CAAgCnC,IAAhC,CAAqCsB,MAArC,EAA6Cc,YAA7C,CAAP;AACH;;AAED,IAAIC,oBAAoB,GAAG,KAA3B;;AACA,SAASC,sBAAT,CAAgCzL,KAAhC,EAAuC;EACnCwL,oBAAoB,GAAGxL,KAAvB;AACH;;AACD,SAAS0L,qBAAT,GAAiC;EAC7B,OAAOF,oBAAP;AACH;;AAED,SAASG,YAAT,CAAsBC,CAAtB,EAAyBC,CAAzB,EAA4B;EACxB,OAAOD,CAAC,KAAKC,CAAb;AACH;;AACD,SAASC,kBAAT,CAA4BzM,IAA5B,EAAkC0M,aAAlC,EAAiDC,UAAjD,EAA6D;EACzD,KAAK,IAAI3K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhC,IAAI,CAACyE,MAAzB,EAAiCzC,CAAC,EAAlC,EAAsC;IAClC,IAAI,CAAC2K,UAAU,CAAC3M,IAAI,CAACgC,CAAD,CAAL,EAAU0K,aAAa,CAAC1K,CAAD,CAAvB,CAAf,EAA4C;MACxC,OAAO,IAAP;IACH;EACJ;;EACD,OAAO,KAAP;AACH;;AACD,SAAS4K,aAAT,CAAuBC,YAAvB,EAAqCC,aAArC,EAAoD;EAChD,OAAOC,cAAc,CAACF,YAAD,EAAeP,YAAf,EAA6BQ,aAA7B,CAArB;AACH;;AACD,SAASC,cAAT,CAAwBF,YAAxB,EAAsCG,gBAAgB,GAAGV,YAAzD,EAAuEQ,aAAa,GAAGR,YAAvF,EAAqG;EACjG,IAAII,aAAa,GAAG,IAApB,CADiG,CAEjG;;EACA,IAAIO,UAAU,GAAG,IAAjB;EACA,IAAIC,cAAJ;;EACA,SAASC,KAAT,GAAiB;IACbT,aAAa,GAAG,IAAhB;IACAO,UAAU,GAAG,IAAb;EACH;;EACD,SAASG,SAAT,CAAmB9H,MAAM,GAAGhF,SAA5B,EAAuC;IACnC4M,cAAc,GAAG;MAAE5H;IAAF,CAAjB;EACH;;EACD,SAAS+H,WAAT,GAAuB;IACnBH,cAAc,GAAG5M,SAAjB;EACH;EACD;EACA;;;EACA,SAASgN,QAAT,GAAoB;IAChB,IAAIJ,cAAc,KAAK5M,SAAvB,EAAkC;MAC9B,OAAO4M,cAAc,CAAC5H,MAAtB;IACH;;IACD,IAAI,CAACoH,aAAL,EAAoB;MAChBO,UAAU,GAAGJ,YAAY,CAACvG,KAAb,CAAmB,IAAnB,EAAyBiH,SAAzB,CAAb;MACAb,aAAa,GAAGa,SAAhB;MACA,OAAON,UAAP;IACH;;IACD,IAAI,CAACR,kBAAkB,CAACc,SAAD,EAAYb,aAAZ,EAA2BM,gBAA3B,CAAvB,EAAqE;MACjE,OAAOC,UAAP;IACH;;IACD,MAAMO,SAAS,GAAGX,YAAY,CAACvG,KAAb,CAAmB,IAAnB,EAAyBiH,SAAzB,CAAlB;IACAb,aAAa,GAAGa,SAAhB;;IACA,IAAIT,aAAa,CAACG,UAAD,EAAaO,SAAb,CAAjB,EAA0C;MACtC,OAAOP,UAAP;IACH;;IACDA,UAAU,GAAGO,SAAb;IACA,OAAOA,SAAP;EACH;;EACD,OAAO;IAAEF,QAAF;IAAYH,KAAZ;IAAmBC,SAAnB;IAA8BC;EAA9B,CAAP;AACH;;AACD,SAASI,cAAT,CAAwB,GAAGC,KAA3B,EAAkC;EAC9B,OAAOC,qBAAqB,CAACZ,cAAD,CAArB,CAAsC,GAAGW,KAAzC,CAAP;AACH;;AACD,SAASE,cAAT,CAAwBhJ,KAAxB,EAA+BiJ,SAA/B,EAA0C1N,KAA1C,EAAiD2N,iBAAjD,EAAoE;EAChE,IAAI3N,KAAK,KAAKG,SAAd,EAAyB;IACrB,MAAMN,IAAI,GAAG6N,SAAS,CAACzO,GAAV,CAAe4G,EAAD,IAAQA,EAAE,CAACpB,KAAD,CAAxB,CAAb;IACA,OAAOkJ,iBAAiB,CAACR,QAAlB,CAA2BhH,KAA3B,CAAiC,IAAjC,EAAuCtG,IAAvC,CAAP;EACH;;EACD,MAAMA,IAAI,GAAG6N,SAAS,CAACzO,GAAV,CAAe4G,EAAD,IAAQA,EAAE,CAACpB,KAAD,EAAQzE,KAAR,CAAxB,CAAb;EACA,OAAO2N,iBAAiB,CAACR,QAAlB,CAA2BhH,KAA3B,CAAiC,IAAjC,EAAuC,CAAC,GAAGtG,IAAJ,EAAUG,KAAV,CAAvC,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASwN,qBAAT,CAA+BI,OAA/B,EAAwC9D,OAAO,GAAG;EAC9C+D,OAAO,EAAEJ;AADqC,CAAlD,EAEG;EACC,OAAO,UAAU,GAAGF,KAAb,EAAoB;IACvB,IAAI1N,IAAI,GAAG0N,KAAX;;IACA,IAAItH,KAAK,CAACC,OAAN,CAAcrG,IAAI,CAAC,CAAD,CAAlB,CAAJ,EAA4B;MACxB,MAAM,CAACiO,IAAD,EAAO,GAAGC,IAAV,IAAkBlO,IAAxB;MACAA,IAAI,GAAG,CAAC,GAAGiO,IAAJ,EAAU,GAAGC,IAAb,CAAP;IACH,CAHD,MAIK,IAAIlO,IAAI,CAACyE,MAAL,KAAgB,CAAhB,IAAqB0J,qBAAqB,CAACnO,IAAI,CAAC,CAAD,CAAL,CAA9C,EAAyD;MAC1DA,IAAI,GAAGoO,kCAAkC,CAACpO,IAAI,CAAC,CAAD,CAAL,CAAzC;IACH;;IACD,MAAM6N,SAAS,GAAG7N,IAAI,CAAC6F,KAAL,CAAW,CAAX,EAAc7F,IAAI,CAACyE,MAAL,GAAc,CAA5B,CAAlB;IACA,MAAM4J,SAAS,GAAGrO,IAAI,CAACA,IAAI,CAACyE,MAAL,GAAc,CAAf,CAAtB;IACA,MAAM6J,iBAAiB,GAAGT,SAAS,CAACxI,MAAV,CAAkB2E,QAAD,IAAcA,QAAQ,CAACuE,OAAT,IAAoB,OAAOvE,QAAQ,CAACuE,OAAhB,KAA4B,UAA/E,CAA1B;IACA,MAAMT,iBAAiB,GAAGC,OAAO,CAAC,UAAU,GAAGF,SAAb,EAAwB;MACtD,OAAOQ,SAAS,CAAC/H,KAAV,CAAgB,IAAhB,EAAsBuH,SAAtB,CAAP;IACH,CAFgC,CAAjC;IAGA,MAAMW,aAAa,GAAGzB,cAAc,CAAC,UAAUnI,KAAV,EAAiBzE,KAAjB,EAAwB;MACzD,OAAO8J,OAAO,CAAC+D,OAAR,CAAgB1H,KAAhB,CAAsB,IAAtB,EAA4B,CAC/B1B,KAD+B,EAE/BiJ,SAF+B,EAG/B1N,KAH+B,EAI/B2N,iBAJ+B,CAA5B,CAAP;IAMH,CAPmC,CAApC;;IAQA,SAASS,OAAT,GAAmB;MACfC,aAAa,CAACrB,KAAd;MACAW,iBAAiB,CAACX,KAAlB;MACAmB,iBAAiB,CAACxG,OAAlB,CAA2BkC,QAAD,IAAcA,QAAQ,CAACuE,OAAT,EAAxC;IACH;;IACD,OAAO7O,MAAM,CAAC6F,MAAP,CAAciJ,aAAa,CAAClB,QAA5B,EAAsC;MACzCiB,OADyC;MAEzCF,SAAS,EAAEP,iBAAiB,CAACR,QAFY;MAGzCF,SAAS,EAAEoB,aAAa,CAACpB,SAHgB;MAIzCC,WAAW,EAAEmB,aAAa,CAACnB;IAJc,CAAtC,CAAP;EAMH,CAlCD;AAmCH;;AACD,SAASoB,qBAAT,CAA+BC,WAA/B,EAA4C;EACxC,OAAOjB,cAAc,CAAE7I,KAAD,IAAW;IAC7B,MAAM+J,YAAY,GAAG/J,KAAK,CAAC8J,WAAD,CAA1B;;IACA,IAAI,CAACrC,qBAAqB,EAAtB,IAA4B/N,SAAS,EAArC,IAA2C,EAAEoQ,WAAW,IAAI9J,KAAjB,CAA/C,EAAwE;MACpEgK,OAAO,CAACC,IAAR,CAAc,kCAAiCH,WAAY,SAA9C,GACT,0DADS,GAET,+DAFS,GAGR,8BAA6BA,WAAY,aAHjC,GAIR,2BAA0BA,WAAY,2BAJ9B,GAKT,gEALS,GAMT,8DANJ;IAOH;;IACD,OAAOC,YAAP;EACH,CAZoB,EAYjBA,YAAD,IAAkBA,YAZA,CAArB;AAaH;;AACD,SAASR,qBAAT,CAA+BN,SAA/B,EAA0C;EACtC,OAAQ,CAAC,CAACA,SAAF,IACJ,OAAOA,SAAP,KAAqB,QADjB,IAEJnO,MAAM,CAACoP,MAAP,CAAcjB,SAAd,EAAyBkB,KAAzB,CAAgC/E,QAAD,IAAc,OAAOA,QAAP,KAAoB,UAAjE,CAFJ;AAGH;;AACD,SAASoE,kCAAT,CAA4CY,mBAA5C,EAAiE;EAC7D,MAAMnB,SAAS,GAAGnO,MAAM,CAACoP,MAAP,CAAcE,mBAAd,CAAlB;EACA,MAAMC,UAAU,GAAGvP,MAAM,CAACC,IAAP,CAAYqP,mBAAZ,CAAnB;;EACA,MAAMX,SAAS,GAAG,CAAC,GAAGa,eAAJ,KAAwBD,UAAU,CAAC1N,MAAX,CAAkB,CAAC+D,MAAD,EAAS7F,GAAT,EAAc0P,KAAd,MAAyB,EACjF,GAAG7J,MAD8E;IAEjF,CAAC7F,GAAD,GAAOyP,eAAe,CAACC,KAAD;EAF2D,CAAzB,CAAlB,EAGtC,EAHsC,CAA1C;;EAIA,OAAO,CAAC,GAAGtB,SAAJ,EAAeQ,SAAf,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASe,aAAT,CAAuBC,aAAvB,EAAsC;EAClC,MAAM;IAAEC,IAAF;IAAQvK,OAAR;IAAiBwK,cAAc,EAAEC;EAAjC,IAA4DH,aAAlE;EACA,MAAMI,eAAe,GAAGhB,qBAAqB,CAACa,IAAD,CAA7C;EACA,MAAMI,eAAe,GAAGC,qBAAqB,CAACF,eAAD,EAAkB1K,OAAlB,CAA7C;EACA,MAAM6K,aAAa,GAAG;IAClB,CAAE,SAAQ/O,UAAU,CAACyO,IAAD,CAAO,OAA3B,GAAoCG,eADlB;IAElB,GAAGC;EAFe,CAAtB;EAIA,MAAMH,cAAc,GAAGC,qBAAqB,GACtCA,qBAAqB,CAACI,aAAD,CADiB,GAEtC,EAFN;EAGA,OAAO;IACHN,IADG;IAEHvK,OAFG;IAGH,GAAG6K,aAHA;IAIH,GAAGL;EAJA,CAAP;AAMH;;AACD,SAASI,qBAAT,CAA+BF,eAA/B,EAAgD1K,OAAhD,EAAyD;EACrD,MAAMT,YAAY,GAAGuL,eAAe,CAAC9K,OAAD,CAApC;EACA,MAAM+K,UAAU,GAAInE,aAAa,CAACrH,YAAD,CAAb,GAA8B5E,MAAM,CAACC,IAAP,CAAY2E,YAAZ,CAA9B,GAA0D,EAA9E;EACA,OAAOwL,UAAU,CAACvO,MAAX,CAAkB,CAACmO,eAAD,EAAkBK,SAAlB,MAAiC,EACtD,GAAGL,eADmD;IAEtD,CAAE,SAAQ7O,UAAU,CAACkP,SAAD,CAAY,EAAhC,GAAoCtC,cAAc,CAACgC,eAAD,EAAmBO,WAAD,IAAiBA,WAAW,GAAGD,SAAH,CAA9C;EAFI,CAAjC,CAAlB,EAGH,EAHG,CAAP;AAIH;;AACD,SAASF,eAAT,CAAyB9K,OAAzB,EAAkC;EAC9B,OAAOA,OAAO,CAACzE,SAAD,EAAY;IAAET,IAAI,EAAE;EAAR,CAAZ,CAAd;AACH;;AAED,SAASoQ,oBAAT,CAA8B5L,QAA9B,EAAwC;EACpC,OAAOA,QAAQ,YAAYlG,cAApB,GAAqCI,MAAM,CAAC8F,QAAD,CAA3C,GAAwDA,QAA/D;AACH;;AACD,SAAS6L,mBAAT,CAA6BC,OAA7B,EAAsCC,aAAtC,EAAqD;EACjD,OAAOA,aAAa,CAAChR,GAAd,CAAkB,CAACiR,IAAD,EAAOlB,KAAP,KAAiB;IACtC,IAAIgB,OAAO,CAAChB,KAAD,CAAP,YAA0BhR,cAA9B,EAA8C;MAC1C,MAAMmS,IAAI,GAAG/R,MAAM,CAAC4R,OAAO,CAAChB,KAAD,CAAR,CAAnB;MACA,OAAO;QACH1P,GAAG,EAAE4Q,IAAI,CAAC5Q,GADP;QAEHyG,cAAc,EAAEoK,IAAI,CAACpK,cAAL,GACVoK,IAAI,CAACpK,cADK,GAEV9B,eAJH;QAKH+B,YAAY,EAAEmK,IAAI,CAACnK,YAAL,GAAoBmK,IAAI,CAACnK,YAAzB,GAAwC,EALnD;QAMH7B,YAAY,EAAEgM,IAAI,CAAChM;MANhB,CAAP;IAQH;;IACD,OAAO+L,IAAP;EACH,CAbM,CAAP;AAcH;;AACD,SAASE,sBAAT,CAAgCC,iBAAhC,EAAmD;EAC/C,OAAOA,iBAAiB,CAACpR,GAAlB,CAAuB2F,OAAD,IAAa;IACtC,OAAOA,OAAO,YAAY5G,cAAnB,GAAoCI,MAAM,CAACwG,OAAD,CAA1C,GAAsDA,OAA7D;EACH,CAFM,CAAP;AAGH;;AACD,SAAS0L,oBAAT,CAA8BnM,YAA9B,EAA4C;EACxC,IAAI,OAAOA,YAAP,KAAwB,UAA5B,EAAwC;IACpC,OAAOA,YAAY,EAAnB;EACH;;EACD,OAAOA,YAAP;AACH;;AACD,SAASoM,mBAAT,CAA6BvK,YAA7B,EAA2CwK,wBAA3C,EAAqE;EACjE,OAAOxK,YAAY,CAACyK,MAAb,CAAoBD,wBAApB,CAAP;AACH;;AACD,SAASE,oBAAT,GAAgC;EAC5B,MAAMtG,KAAK,GAAGhM,MAAM,CAACgL,KAAD,EAAQ;IAAEuH,QAAQ,EAAE,IAAZ;IAAkBC,QAAQ,EAAE;EAA5B,CAAR,CAApB;;EACA,IAAIxG,KAAJ,EAAW;IACP,MAAM,IAAIhI,SAAJ,CAAe,yGAAf,CAAN;EACH;;EACD,OAAO,SAAP;AACH;;AAED,SAASyO,4BAAT,CAAsCjM,OAAtC,EAA+CkM,MAA/C,EAAuD;EACnD,OAAO,UAAUrM,KAAV,EAAiBtC,MAAjB,EAAyB;IAC5B,MAAM4O,GAAG,GAAGD,MAAM,CAAC3O,MAAP,CAAcA,MAAd,IAAwB6O,MAAM,CAAC7O,MAAD,CAA9B,GAAyCA,MAArD;IACA,MAAMwC,SAAS,GAAGC,OAAO,CAACH,KAAD,EAAQsM,GAAR,CAAzB;IACA,OAAOD,MAAM,CAACrM,KAAP,KAAiBuM,MAAM,CAACrM,SAAD,CAAvB,GAAqCA,SAA5C;EACH,CAJD;AAKH;;AACD,SAASqM,MAAT,CAAgB/F,MAAhB,EAAwB;EACpB1L,MAAM,CAACyR,MAAP,CAAc/F,MAAd;EACA,MAAMgG,gBAAgB,GAAGrF,UAAU,CAACX,MAAD,CAAnC;EACA1L,MAAM,CAAC2R,mBAAP,CAA2BjG,MAA3B,EAAmCtD,OAAnC,CAA4CwJ,IAAD,IAAU;IACjD;IACA,IAAIA,IAAI,CAACC,UAAL,CAAgB,GAAhB,CAAJ,EAA0B;MACtB;IACH;;IACD,IAAItF,cAAc,CAACb,MAAD,EAASkG,IAAT,CAAd,KACCF,gBAAgB,GACXE,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,QAA9B,IAA0CA,IAAI,KAAK,WADxC,GAEX,IAHN,CAAJ,EAGiB;MACb,MAAME,SAAS,GAAGpG,MAAM,CAACkG,IAAD,CAAxB;;MACA,IAAI,CAAC7F,YAAY,CAAC+F,SAAD,CAAZ,IAA2BzF,UAAU,CAACyF,SAAD,CAAtC,KACA,CAAC9R,MAAM,CAAC+R,QAAP,CAAgBD,SAAhB,CADL,EACiC;QAC7BL,MAAM,CAACK,SAAD,CAAN;MACH;IACJ;EACJ,CAfD;EAgBA,OAAOpG,MAAP;AACH;;AAED,SAASsG,6BAAT,CAAuC3M,OAAvC,EAAgDkM,MAAhD,EAAwD;EACpD,OAAO,UAAUrM,KAAV,EAAiBtC,MAAjB,EAAyB;IAC5B,IAAI2O,MAAM,CAAC3O,MAAP,CAAcA,MAAd,CAAJ,EAA2B;MACvB,MAAMqP,oBAAoB,GAAGC,iBAAiB,CAACtP,MAAD,CAA9C;MACAuP,qBAAqB,CAACF,oBAAD,EAAuB,QAAvB,CAArB;IACH;;IACD,MAAM7M,SAAS,GAAGC,OAAO,CAACH,KAAD,EAAQtC,MAAR,CAAzB;;IACA,IAAI2O,MAAM,CAACrM,KAAP,EAAJ,EAAoB;MAChB,MAAMkN,mBAAmB,GAAGF,iBAAiB,CAAC9M,SAAD,CAA7C;MACA+M,qBAAqB,CAACC,mBAAD,EAAsB,OAAtB,CAArB;IACH;;IACD,OAAOhN,SAAP;EACH,CAXD;AAYH;;AACD,SAAS8M,iBAAT,CAA2BxG,MAA3B,EAAmC2G,IAAI,GAAG,EAA1C,EAA8C;EAC1C;EACA,IAAI,CAAC5G,WAAW,CAACC,MAAD,CAAX,IAAuBC,MAAM,CAACD,MAAD,CAA9B,KAA2C2G,IAAI,CAACtN,MAAL,KAAgB,CAA/D,EAAkE;IAC9D,OAAO;MACHsN,IAAI,EAAE,CAAC,MAAD,CADH;MAEHpR,KAAK,EAAEyK;IAFJ,CAAP;EAIH;;EACD,MAAMzL,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYyL,MAAZ,CAAb;EACA,OAAOzL,IAAI,CAAC4B,MAAL,CAAY,CAAC+D,MAAD,EAAS7F,GAAT,KAAiB;IAChC,IAAI6F,MAAJ,EAAY;MACR,OAAOA,MAAP;IACH;;IACD,MAAM3E,KAAK,GAAGyK,MAAM,CAAC3L,GAAD,CAApB,CAJgC,CAKhC;;IACA,IAAIuM,WAAW,CAACrL,KAAD,CAAf,EAAwB;MACpB,OAAO2E,MAAP;IACH;;IACD,IAAI6F,WAAW,CAACxK,KAAD,CAAX,IACA0K,MAAM,CAAC1K,KAAD,CADN,IAEA6K,QAAQ,CAAC7K,KAAD,CAFR,IAGA4K,SAAS,CAAC5K,KAAD,CAHT,IAIA2K,QAAQ,CAAC3K,KAAD,CAJR,IAKA0F,OAAO,CAAC1F,KAAD,CALX,EAKoB;MAChB,OAAO,KAAP;IACH;;IACD,IAAIgL,aAAa,CAAChL,KAAD,CAAjB,EAA0B;MACtB,OAAOiR,iBAAiB,CAACjR,KAAD,EAAQ,CAAC,GAAGoR,IAAJ,EAAUtS,GAAV,CAAR,CAAxB;IACH;;IACD,OAAO;MACHsS,IAAI,EAAE,CAAC,GAAGA,IAAJ,EAAUtS,GAAV,CADH;MAEHkB;IAFG,CAAP;EAIH,CAxBM,EAwBJ,KAxBI,CAAP;AAyBH;;AACD,SAASkR,qBAAT,CAA+BG,cAA/B,EAA+CC,OAA/C,EAAwD;EACpD,IAAID,cAAc,KAAK,KAAvB,EAA8B;IAC1B;EACH;;EACD,MAAME,kBAAkB,GAAGF,cAAc,CAACD,IAAf,CAAoB9P,IAApB,CAAyB,GAAzB,CAA3B;EACA,MAAMwI,KAAK,GAAG,IAAIrK,KAAJ,CAAW,2BAA0B6R,OAAQ,QAAOC,kBAAmB,MAAKhH,iBAAkB,UAAS+G,OAAQ,iBAA/G,CAAd;EACAxH,KAAK,CAAC9J,KAAN,GAAcqR,cAAc,CAACrR,KAA7B;EACA8J,KAAK,CAACyH,kBAAN,GAA2BA,kBAA3B;EACA,MAAMzH,KAAN;AACH;;AAED,SAAS0H,yBAAT,CAAmCpN,OAAnC,EAA4CkM,MAA5C,EAAoD;EAChD,OAAO,UAAUrM,KAAV,EAAiBtC,MAAjB,EAAyB;IAC5B,IAAI2O,MAAM,CAAC3O,MAAP,CAAcA,MAAd,KAAyB,CAACrE,EAAE,CAACmU,MAAH,CAAUC,eAAV,EAA9B,EAA2D;MACvD,MAAM,IAAIjS,KAAJ,CAAW,WAAUkC,MAAM,CAACzC,IAAK,6BAA4BqL,iBAAkB,2BAA/E,CAAN;IACH;;IACD,OAAOnG,OAAO,CAACH,KAAD,EAAQtC,MAAR,CAAd;EACH,CALD;AAMH;;AAED,SAASgQ,yBAAT,CAAmCC,aAAnC,EAAkD;EAC9C,IAAIjU,SAAS,EAAb,EAAiB;IACb,OAAO;MACHkU,0BAA0B,EAAE,KADzB;MAEHC,2BAA2B,EAAE,KAF1B;MAGHC,uBAAuB,EAAE,IAHtB;MAIHC,wBAAwB,EAAE,IAJvB;MAKHC,wBAAwB,EAAE,KALvB;MAMHC,0BAA0B,EAAE,KANzB;MAOH,GAAGN;IAPA,CAAP;EASH;;EACD,OAAO;IACHC,0BAA0B,EAAE,KADzB;IAEHC,2BAA2B,EAAE,KAF1B;IAGHC,uBAAuB,EAAE,KAHtB;IAIHC,wBAAwB,EAAE,KAJvB;IAKHC,wBAAwB,EAAE,KALvB;IAMHC,0BAA0B,EAAE;EANzB,CAAP;AAQH;;AACD,SAASC,mCAAT,CAA6C;EAAEL,2BAAF;EAA+BD;AAA/B,CAA7C,EAA2G;EACvG,OAAQzN,OAAD,IAAa0N,2BAA2B,IAAID,0BAA/B,GACdd,6BAA6B,CAAC3M,OAAD,EAAU;IACrCzC,MAAM,EAAGA,MAAD,IAAYmQ,2BAA2B,IAAI,CAACM,gBAAgB,CAACzQ,MAAD,CAD/B;IAErCsC,KAAK,EAAE,MAAM4N;EAFwB,CAAV,CADf,GAKdzN,OALN;AAMH;;AACD,SAASiO,kCAAT,CAA4C;EAAEL,wBAAF;EAA4BD;AAA5B,CAA5C,EAAoG;EAChG,OAAQ3N,OAAD,IAAa4N,wBAAwB,IAAID,uBAA5B,GACd1B,4BAA4B,CAACjM,OAAD,EAAU;IACpCzC,MAAM,EAAGA,MAAD,IAAYqQ,wBAAwB,IAAI,CAACI,gBAAgB,CAACzQ,MAAD,CAD7B;IAEpCsC,KAAK,EAAE,MAAM8N;EAFuB,CAAV,CADd,GAKd3N,OALN;AAMH;;AACD,SAASgO,gBAAT,CAA0BzQ,MAA1B,EAAkC;EAC9B,OAAOA,MAAM,CAACzC,IAAP,CAAY0R,UAAZ,CAAuB,OAAvB,CAAP;AACH;;AACD,SAAS0B,8BAAT,CAAwC;EAAEL;AAAF,CAAxC,EAAuE;EACnE,OAAQ7N,OAAD,IAAa6N,wBAAwB,GACtCT,yBAAyB,CAACpN,OAAD,EAAU;IACjCzC,MAAM,EAAGA,MAAD,IAAYsQ,wBAAwB,IAAI,CAACG,gBAAgB,CAACzQ,MAAD;EADhC,CAAV,CADa,GAItCyC,OAJN;AAKH;;AACD,SAASmO,oBAAT,CAA8BX,aAA9B,EAA6C;EACzC,OAAO,CACH;IACItK,OAAO,EAAElE,oBADb;IAEIoP,QAAQ,EAAEZ;EAFd,CADG,EAKH;IACItK,OAAO,EAAEnE,mBADb;IAEIsP,UAAU,EAAEC,qBAFhB;IAGIC,IAAI,EAAE,CAACvP,oBAAD;EAHV,CALG,EAUH;IACIkE,OAAO,EAAEjE,qBADb;IAEIsP,IAAI,EAAE,CAACxP,mBAAD,CAFV;IAGIsP,UAAU,EAAEd;EAHhB,CAVG,EAeH;IACIrK,OAAO,EAAErE,aADb;IAEI2P,KAAK,EAAE,IAFX;IAGID,IAAI,EAAE,CAACtP,qBAAD,CAHV;IAIIoP,UAAU,EAAEJ;EAJhB,CAfG,EAqBH;IACI/K,OAAO,EAAErE,aADb;IAEI2P,KAAK,EAAE,IAFX;IAGID,IAAI,EAAE,CAACtP,qBAAD,CAHV;IAIIoP,UAAU,EAAEN;EAJhB,CArBG,EA2BH;IACI7K,OAAO,EAAErE,aADb;IAEI2P,KAAK,EAAE,IAFX;IAGID,IAAI,EAAE,CAACtP,qBAAD,CAHV;IAIIoP,UAAU,EAAEH;EAJhB,CA3BG,CAAP;AAkCH;;AACD,SAASO,4BAAT,GAAwC;EACpC,OAAO,CACH;IACIvL,OAAO,EAAEhE,6BADb;IAEIsP,KAAK,EAAE,IAFX;IAGID,IAAI,EAAE,CAACtP,qBAAD,CAHV;IAIIoP,UAAU,EAAEK;EAJhB,CADG,CAAP;AAQH;;AACD,SAASJ,qBAAT,CAA+Bd,aAA/B,EAA8C;EAC1C,OAAOA,aAAP;AACH;;AACD,SAASkB,0BAAT,CAAoC3T,MAApC,EAA4C;EACxC,IAAI,CAACA,MAAM,CAAC+S,0BAAZ,EAAwC;IACpC;EACH;;EACD,MAAMa,UAAU,GAAGhU,MAAM,CAACiU,OAAP,CAAepU,uBAAf,EACd8F,MADc,CACP,CAAC,GAAGuO,aAAH,CAAD,KAAuBA,aAAa,GAAG,CADhC,EAEdxU,GAFc,CAEV,CAAC,CAACS,IAAD,CAAD,KAAYA,IAFF,CAAnB;;EAGA,IAAI6T,UAAU,CAACjP,MAAf,EAAuB;IACnB,MAAM,IAAIrE,KAAJ,CAAW,+CAA8CsT,UAAU,CACpEtU,GAD0D,CACrDS,IAAD,IAAW,IAAGA,IAAK,GADmC,EAE1DoC,IAF0D,CAErD,IAFqD,CAE/C,KAAIiJ,iBAAkB,6BAFhC,CAAN;EAGH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS2I,YAAT,CAAsBC,kBAAtB,EAA0CzP,QAA1C,EAAoDvE,MAAM,GAAG,EAA7D,EAAiE;EAC7D,OAAOtB,wBAAwB,CAAC,CAC5B,GAAGuV,aAAa,CAACD,kBAAD,EAAqBzP,QAArB,EAA+BvE,MAA/B,CADY,EAE5BkU,0BAF4B,CAAD,CAA/B;AAIH;;AACD,SAASC,aAAT,CAAuB5P,QAAQ,GAAG,EAAlC,EAAsCvE,MAAM,GAAG,EAA/C,EAAmD;EAC/C,OAAO,CACH;IACImI,OAAO,EAAEpF,iBADb;IAEIuQ,UAAU,EAAEvC;EAFhB,CADG,EAKH;IAAE5I,OAAO,EAAEnF,cAAX;IAA2BqQ,QAAQ,EAAErT,MAAM,CAACwE;EAA5C,CALG,EAMH;IACI2D,OAAO,EAAElF,aADb;IAEIqQ,UAAU,EAAE3C,oBAFhB;IAGI6C,IAAI,EAAE,CAACxQ,cAAD;EAHV,CANG,EAWH;IAAEmF,OAAO,EAAE9E,iBAAX;IAA8BgQ,QAAQ,EAAE9O;EAAxC,CAXG,EAYH;IACI4D,OAAO,EAAE5E,eADb;IAEI6E,WAAW,EAAE7D,QAAQ,YAAYlG,cAApB,GAAqCkG,QAArC,GAAgDlB;EAFjE,CAZG,EAgBH;IACI8E,OAAO,EAAE/E,gBADb;IAEIoQ,IAAI,EAAE,CAACnQ,iBAAD,EAAoB,CAAC,IAAI/E,MAAJ,CAAWiF,eAAX,CAAD,CAApB,CAFV;IAGI+P,UAAU,EAAEnD;EAHhB,CAhBG,EAqBH;IACIhI,OAAO,EAAEtE,2BADb;IAEIwP,QAAQ,EAAErT,MAAM,CAACqG,YAAP,GAAsBrG,MAAM,CAACqG,YAA7B,GAA4C;EAF1D,CArBG,EAyBH;IACI8B,OAAO,EAAEpE,uBADb;IAEIyP,IAAI,EAAE,CAAC1P,aAAD,EAAgBD,2BAAhB,CAFV;IAGIyP,UAAU,EAAE1C;EAHhB,CAzBG,EA8BH;IACIzI,OAAO,EAAEhF,gBADb;IAEIkQ,QAAQ,EAAErT,MAAM,CAACoG,cAAP,GAAwBpG,MAAM,CAACoG,cAA/B,GAAgD9B;EAF9D,CA9BG,EAkCH;IACI6D,OAAO,EAAEjF,eADb;IAEIsQ,IAAI,EAAE,CAACrQ,gBAAD,EAAmBY,uBAAnB,CAFV;IAGIuP,UAAU,EAAEnN;EAHhB,CAlCG,EAuCHrD,yBAvCG,EAwCHoF,yBAxCG,EAyCHI,iCAzCG,EA0CHkB,eA1CG,EA2CHqB,eA3CG,EA4CHuI,oBAAoB,CAACpT,MAAM,CAACyS,aAAR,CA5CjB,EA6CHiB,4BAA4B,EA7CzB,CAAP;AA+CH;;AACD,SAASU,wBAAT,GAAoC;EAChC3V,MAAM,CAAC4D,cAAD,CAAN;EACA5D,MAAM,CAACkI,iBAAD,CAAN;EACAlI,MAAM,CAAC4J,qBAAD,CAAN;EACA5J,MAAM,CAACgL,KAAD,CAAN;EACAhL,MAAM,CAACsE,iBAAD,EAAoB;IAAEiO,QAAQ,EAAE;EAAZ,CAApB,CAAN;EACAvS,MAAM,CAAC0F,6BAAD,EAAgC;IAAE6M,QAAQ,EAAE;EAAZ,CAAhC,CAAN;AACH;AACD;AACA;AACA;AACA;;;AACA,MAAMqD,0BAA0B,GAAG,CAC/B;EAAElM,OAAO,EAAE/D,mBAAX;EAAgCkP,UAAU,EAAEc;AAA5C,CAD+B,EAE/B;EACIjM,OAAO,EAAExJ,uBADb;EAEI8U,KAAK,EAAE,IAFX;;EAGIH,UAAU,GAAG;IACT,OAAO,MAAM7U,MAAM,CAAC2F,mBAAD,CAAnB;EACH;;AALL,CAF+B,CAAnC;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASkQ,YAAT,CAAsB/P,QAAtB,EAAgCvE,MAAhC,EAAwC;EACpC,OAAOtB,wBAAwB,CAAC,CAC5B,GAAGyV,aAAa,CAAC5P,QAAD,EAAWvE,MAAX,CADY,EAE5BqU,0BAF4B,CAAD,CAA/B;AAIH;;AACD,SAASE,2BAAT,GAAuC;EACnC9V,MAAM,CAAC2F,mBAAD,CAAN;EACA,MAAMgD,QAAQ,GAAG3I,MAAM,CAACiF,eAAD,CAAvB;EACA,MAAM8Q,eAAe,GAAG/V,MAAM,CAACmF,gBAAD,CAA9B;EACA,MAAMgG,cAAc,GAAGnL,MAAM,CAACqI,cAAD,CAA7B;EACArI,MAAM,CAAC0F,6BAAD,EAAgC;IAAE6M,QAAQ,EAAE;EAAZ,CAAhC,CAAN;EACA,MAAMyD,KAAK,GAAGrN,QAAQ,CAAC9H,GAAT,CAAa,CAAC4H,OAAD,EAAUmI,KAAV,KAAoB;IAC3C,MAAMqF,wBAAwB,GAAGF,eAAe,CAACG,KAAhB,EAAjC,CAD2C,CAE3C;;IACA,MAAMpQ,QAAQ,GAAGmQ;IAAyB;IAAD,CAAgBrF,KAAhB,CAAzC;IACA,OAAO,EACH,GAAGnI,OADA;MAEH3C,QAFG;MAGHC,YAAY,EAAEmM,oBAAoB,CAACzJ,OAAO,CAAC1C,YAAT;IAH/B,CAAP;EAKH,CATa,CAAd;EAUAoF,cAAc,CAACzC,WAAf,CAA2BsN,KAA3B;AACH;AACD;AACA;AACA;AACA;;;AACA,MAAMP,0BAA0B,GAAG,CAC/B;EACI/L,OAAO,EAAE9D,sBADb;EAEIiP,UAAU,EAAEiB;AAFhB,CAD+B,EAK/B;EACIpM,OAAO,EAAExJ,uBADb;EAEI8U,KAAK,EAAE,IAFX;;EAGIH,UAAU,GAAG;IACT,OAAO,MAAM7U,MAAM,CAAC4F,sBAAD,CAAnB;EACH;;AALL,CAL+B,CAAnC;;AAaA,SAAS4P,aAAT,CAAuBD,kBAAvB,EAA2CzP,QAA3C,EAAqDvE,MAAM,GAAG,EAA9D,EAAkE;EAC9D,OAAO,CACH;IACImI,OAAO,EAAE1E,gBADb;IAEIgQ,KAAK,EAAE,IAFX;IAGIJ,QAAQ,EAAEW,kBAAkB,YAAYpU,MAA9B,GAAuC,EAAvC,GAA4CI;EAH1D,CADG,EAMH;IACImI,OAAO,EAAE7E,cADb;IAEImQ,KAAK,EAAE,IAFX;IAGIJ,QAAQ,EAAE;MACN1T,GAAG,EAAEqU,kBAAkB,YAAYpU,MAA9B,GACCoU,kBAAkB,CAACxE,IADpB,GAECwE,kBAHA;MAIN5N,cAAc,EAAE,EAAEpG,MAAM,YAAY3B,cAApB,KAAuC2B,MAAM,CAACoG,cAA9C,GACVpG,MAAM,CAACoG,cADG,GAEV9B,eANA;MAON+B,YAAY,EAAE,EAAErG,MAAM,YAAY3B,cAApB,KAAuC2B,MAAM,CAACqG,YAA9C,GACRrG,MAAM,CAACqG,YADC,GAER,EATA;MAUN7B,YAAY,EAAE,EAAExE,MAAM,YAAY3B,cAApB,KAAuC2B,MAAM,CAACwE,YAA9C,GACRxE,MAAM,CAACwE,YADC,GAERhE;IAZA;EAHd,CANG,EAwBH;IACI2H,OAAO,EAAEzE,eADb;IAEI8P,IAAI,EAAE,CAAC/P,gBAAD,EAAmBH,cAAnB,CAFV;IAGIgQ,UAAU,EAAElD;EAHhB,CAxBG,EA6BH;IACIjI,OAAO,EAAE3E,iBADb;IAEIiQ,KAAK,EAAE,IAFX;IAGIJ,QAAQ,EAAEW,kBAAkB,YAAYpU,MAA9B,GACJoU,kBAAkB,CAAC/O,OADf,GAEJV;EALV,CA7BG,EAoCH;IACI4D,OAAO,EAAExE,uBADb;IAEI8P,KAAK,EAAE,IAFX;IAGIrL,WAAW,EAAE7D,QAAQ,YAAYlG,cAApB,GAAqCkG,QAArC,GAAgDf;EAHjE,CApCG,EAyCH;IACI2E,OAAO,EAAEvE,gBADb;IAEI6P,KAAK,EAAE,IAFX;IAGID,IAAI,EAAE,CAAChQ,iBAAD,EAAoB,CAAC,IAAIlF,MAAJ,CAAWqF,uBAAX,CAAD,CAApB,CAHV;IAII2P,UAAU,EAAE7C;EAJhB,CAzCG,EA+CHiD,4BAA4B,EA/CzB,CAAP;AAiDH;;AAED,MAAMkB,eAAN,CAAsB;EAClBtS,WAAW,CAACmG,QAAD,EAAWC,QAAX,EAAqBmM,eAArB,EAAsCpK,KAAtC,EAA6CqK,KAA7C,EAAoDC,WAApD,EAAiE,CAAG;EAC/E;;;EAFkB,YAEU,KAAKnS,IAAL;IAAA,iBAAiGgS,eAAjG,EAtrCuFzW,EAsrCvF,UAAkIkE,cAAlI,GAtrCuFlE,EAsrCvF,UAA6JwI,iBAA7J,GAtrCuFxI,EAsrCvF,UAA2LkK,qBAA3L,GAtrCuFlK,EAsrCvF,UAA6NsL,KAA7N,GAtrCuFtL,EAsrCvF,UAA+O4E,iBAA/O,MAtrCuF5E,EAsrCvF,UAA6RgG,6BAA7R;EAAA,CAFV;EAGlB;;EAHkB,aAGU,KAAK6Q,IAAL,kBAvrCuF7W,EAurCvF;IAAA,MAAkGyW;EAAlG,EAHV;EAIlB;;EAJkB,aAIU,KAAKK,IAAL,kBAxrCuF9W,EAwrCvF,qBAJV;AAAA;;AAMtB;EAAA,mDA1rCuHA,EA0rCvH,mBAA2FyW,eAA3F,EAAwH,CAAC;IAC7G7U,IAAI,EAAEnB,QADuG;IAE7GsB,IAAI,EAAE,CAAC,EAAD;EAFuG,CAAD,CAAxH,EAG4B,YAAY;IAAE,OAAO,CAAC;MAAEH,IAAI,EAAEsC;IAAR,CAAD,EAA2B;MAAEtC,IAAI,EAAE4G;IAAR,CAA3B,EAAwD;MAAE5G,IAAI,EAAEsI;IAAR,CAAxD,EAAyF;MAAEtI,IAAI,EAAE0J;IAAR,CAAzF,EAA0G;MAAE1J,IAAI,EAAES,SAAR;MAAmByH,UAAU,EAAE,CAAC;QACvKlI,IAAI,EAAElB;MADiK,CAAD,EAEvK;QACCkB,IAAI,EAAEzB,MADP;QAEC4B,IAAI,EAAE,CAAC6C,iBAAD;MAFP,CAFuK;IAA/B,CAA1G,EAK3B;MAAEhD,IAAI,EAAES,SAAR;MAAmByH,UAAU,EAAE,CAAC;QAClClI,IAAI,EAAElB;MAD4B,CAAD,EAElC;QACCkB,IAAI,EAAEzB,MADP;QAEC4B,IAAI,EAAE,CAACiE,6BAAD;MAFP,CAFkC;IAA/B,CAL2B,CAAP;EAUlB,CAbxB;AAAA;;AAcA,MAAM+Q,kBAAN,CAAyB;EACrB5S,WAAW,CAAC8E,QAAD,EAAWoN,eAAX,EAA4B5K,cAA5B,EAA4CuL,IAA5C,EAAkDJ,WAAlD,EAA+D;IACtE,KAAK3N,QAAL,GAAgBA,QAAhB;IACA,KAAKoN,eAAL,GAAuBA,eAAvB;IACA,KAAK5K,cAAL,GAAsBA,cAAtB;IACA,MAAM6K,KAAK,GAAGrN,QAAQ,CAAC9H,GAAT,CAAa,CAAC4H,OAAD,EAAUmI,KAAV,KAAoB;MAC3C,MAAMqF,wBAAwB,GAAGF,eAAe,CAACG,KAAhB,EAAjC,CAD2C,CAE3C;;MACA,MAAMpQ,QAAQ,GAAGmQ;MAAyB;MAAD,CAAgBrF,KAAhB,CAAzC;MACA,OAAO,EACH,GAAGnI,OADA;QAEH3C,QAFG;QAGHC,YAAY,EAAEmM,oBAAoB,CAACzJ,OAAO,CAAC1C,YAAT;MAH/B,CAAP;IAKH,CATa,CAAd;IAUAoF,cAAc,CAACzC,WAAf,CAA2BsN,KAA3B;EACH,CAhBoB,CAiBrB;;;EACA9R,WAAW,GAAG;IACV,KAAKiH,cAAL,CAAoBpC,cAApB,CAAmC,KAAKJ,QAAxC;EACH;EACD;;;EArBqB,YAqBO,KAAKxE,IAAL;IAAA,iBAAiGsS,kBAAjG,EA7tCuF/W,EA6tCvF,UAAqIuF,eAArI,GA7tCuFvF,EA6tCvF,UAAiKyF,gBAAjK,GA7tCuFzF,EA6tCvF,UAA8L2I,cAA9L,GA7tCuF3I,EA6tCvF,UAAyNyW,eAAzN,GA7tCuFzW,EA6tCvF,UAAqPgG,6BAArP;EAAA,CArBP;EAsBrB;;EAtBqB,aAsBO,KAAK6Q,IAAL,kBA9tCuF7W,EA8tCvF;IAAA,MAAkG+W;EAAlG,EAtBP;EAuBrB;;EAvBqB,aAuBO,KAAKD,IAAL,kBA/tCuF9W,EA+tCvF,qBAvBP;AAAA;;AAyBzB;EAAA,mDAjuCuHA,EAiuCvH,mBAA2F+W,kBAA3F,EAA2H,CAAC;IAChHnV,IAAI,EAAEnB,QAD0G;IAEhHsB,IAAI,EAAE,CAAC,EAAD;EAF0G,CAAD,CAA3H,EAG4B,YAAY;IAAE,OAAO,CAAC;MAAEH,IAAI,EAAES,SAAR;MAAmByH,UAAU,EAAE,CAAC;QAC9DlI,IAAI,EAAEzB,MADwD;QAE9D4B,IAAI,EAAE,CAACwD,eAAD;MAFwD,CAAD;IAA/B,CAAD,EAG3B;MAAE3D,IAAI,EAAES,SAAR;MAAmByH,UAAU,EAAE,CAAC;QAClClI,IAAI,EAAEzB,MAD4B;QAElC4B,IAAI,EAAE,CAAC0D,gBAAD;MAF4B,CAAD;IAA/B,CAH2B,EAM3B;MAAE7D,IAAI,EAAE+G;IAAR,CAN2B,EAMD;MAAE/G,IAAI,EAAE6U;IAAR,CANC,EAM0B;MAAE7U,IAAI,EAAES,SAAR;MAAmByH,UAAU,EAAE,CAAC;QACvFlI,IAAI,EAAElB;MADiF,CAAD,EAEvF;QACCkB,IAAI,EAAEzB,MADP;QAEC4B,IAAI,EAAE,CAACiE,6BAAD;MAFP,CAFuF;IAA/B,CAN1B,CAAP;EAWlB,CAdxB;AAAA;;AAeA,MAAMiR,WAAN,CAAkB;EACA,OAAPC,OAAO,CAAC9Q,QAAD,EAAWvE,MAAX,EAAmB;IAC7B,OAAO;MACHsV,QAAQ,EAAEV,eADP;MAEHW,SAAS,EAAE,CAAC,GAAGpB,aAAa,CAAC5P,QAAD,EAAWvE,MAAX,CAAjB;IAFR,CAAP;EAIH;;EACgB,OAAVwV,UAAU,CAACxB,kBAAD,EAAqBzP,QAArB,EAA+BvE,MAAM,GAAG,EAAxC,EAA4C;IACzD,OAAO;MACHsV,QAAQ,EAAEJ,kBADP;MAEHK,SAAS,EAAE,CAAC,GAAGtB,aAAa,CAACD,kBAAD,EAAqBzP,QAArB,EAA+BvE,MAA/B,CAAjB;IAFR,CAAP;EAIH;EACD;;;EAbc,YAac,KAAK4C,IAAL;IAAA,iBAAiGwS,WAAjG;EAAA,CAbd;EAcd;;EAdc,aAcc,KAAKJ,IAAL,kBA9vCuF7W,EA8vCvF;IAAA,MAAkGiX;EAAlG,EAdd;EAed;;EAfc,aAec,KAAKH,IAAL,kBA/vCuF9W,EA+vCvF,qBAfd;AAAA;;AAiBlB;EAAA,mDAjwCuHA,EAiwCvH,mBAA2FiX,WAA3F,EAAoH,CAAC;IACzGrV,IAAI,EAAEnB,QADmG;IAEzGsB,IAAI,EAAE,CAAC,EAAD;EAFmG,CAAD,CAApH;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASuV,EAAT,CAAY,GAAGvV,IAAf,EAAqB;EACjB,MAAM+E,OAAO,GAAG/E,IAAI,CAACwV,GAAL,EAAhB;EACA,MAAMC,KAAK,GAAGzV,IAAI,CAACZ,GAAL,CAAUqB,OAAD,IAAaA,OAAO,CAACZ,IAA9B,CAAd;EACA,OAAO;IAAEkF,OAAF;IAAW0Q;EAAX,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,aAAT,CAAuBpR,YAAvB,EAAqC,GAAGqR,GAAxC,EAA6C;EACzC,MAAMvW,GAAG,GAAG,IAAIwW,GAAJ,EAAZ;;EACA,KAAK,MAAML,EAAX,IAAiBI,GAAjB,EAAsB;IAClB,KAAK,MAAM9V,IAAX,IAAmB0V,EAAE,CAACE,KAAtB,EAA6B;MACzB,MAAMI,eAAe,GAAGzW,GAAG,CAAC0W,GAAJ,CAAQjW,IAAR,CAAxB;;MACA,IAAIgW,eAAJ,EAAqB;QACjB,MAAME,UAAU,GAAG,CAACnR,KAAD,EAAQtC,MAAR,KAAmBiT,EAAE,CAACxQ,OAAH,CAAW8Q,eAAe,CAACjR,KAAD,EAAQtC,MAAR,CAA1B,EAA2CA,MAA3C,CAAtC;;QACAlD,GAAG,CAAC4W,GAAJ,CAAQnW,IAAR,EAAckW,UAAd;MACH,CAHD,MAIK;QACD3W,GAAG,CAAC4W,GAAJ,CAAQnW,IAAR,EAAc0V,EAAE,CAACxQ,OAAjB;MACH;IACJ;EACJ;;EACD,OAAO,UAAUH,KAAK,GAAGN,YAAlB,EAAgChC,MAAhC,EAAwC;IAC3C,MAAMyC,OAAO,GAAG3F,GAAG,CAAC0W,GAAJ,CAAQxT,MAAM,CAACzC,IAAf,CAAhB;IACA,OAAOkF,OAAO,GAAGA,OAAO,CAACH,KAAD,EAAQtC,MAAR,CAAV,GAA4BsC,KAA1C;EACH,CAHD;AAIH;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAEA,SAASZ,qBAAT,EAAgC7B,cAAhC,EAAgDuB,gBAAhD,EAAkES,sBAAlE,EAA0FjC,IAA1F,EAAgGgB,gBAAhG,EAAkHH,aAAlH,EAAiIa,aAAjI,EAAgJZ,eAAhJ,EAAiKkB,mBAAjK,EAAsL0C,cAAtL,EAAsMF,wBAAtM,EAAgOD,iBAAhO,EAAmPrD,cAAnP,EAAmQ+E,qBAAnQ,EAA0RG,KAA1R,EAAiSD,eAAjS,EAAkTkB,KAAlT,EAAyTyL,kBAAzT,EAA6UE,WAA7U,EAA0VR,eAA1V,EAA2W/N,MAA3W,EAAmXhD,2BAAnX,EAAgZG,mBAAhZ,EAAqaM,eAAra,EAAsboB,OAAtb,EAA+b5F,YAA/b,EAA6cwB,iBAA7c,EAAgegO,aAAhe,EAA+eX,qBAA/e,EAAsgBiH,aAAtgB,EAAqhBzP,oBAArhB,EAA2iBwH,cAA3iB,EAA2jBE,qBAA3jB,EAAklBZ,cAAllB,EAAkmBa,cAAlmB,EAAknBhM,UAAlnB,EAA8nByK,qBAA9nB,EAAqpBkJ,EAArpB,EAAypBpV,KAAzpB,EAAgqB0T,YAAhqB,EAA8qBO,YAA9qB,EAA4rBrL,WAA5rB,EAAysB6D,aAAzsB,EAAwtBjD,MAAxtB,EAAguByC,sBAAhuB,EAAwvB7L,KAAxvB"},"metadata":{},"sourceType":"module"}